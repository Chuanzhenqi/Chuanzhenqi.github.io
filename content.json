{"meta":{"title":"Sao&i_T@ng","subtitle":"","description":"","author":"独步星尘","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2024-10-07T19:43:40.000Z","updated":"2024-10-07T19:43:40.155Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"About me","date":"2024-10-06T12:29:42.000Z","updated":"2024-10-06T12:29:42.702Z","comments":false,"path":"about/me.html","permalink":"http://example.com/about/me.html","excerpt":"","text":""}],"posts":[{"title":"Summary7","slug":"Summary7","date":"2024-10-09T10:54:56.000Z","updated":"2024-10-09T11:41:11.978Z","comments":true,"path":"2024/10/09/Summary7/","permalink":"http://example.com/2024/10/09/Summary7/","excerpt":"$BU\\sim BX$","text":"$BU\\sim BX$ BU 将军棋时间限制：1000ms 内存限制：65536kb 通过率：13&#x2F;22 (59.09%) 正确率：13&#x2F;90 (14.44%) 题目描述clay17和clay19在玩generals。 这款游戏是在一个由$r$行$c$列的网格内进行的。每个格点有几种类型，分别为国王塔，城市，普通格子，山地，沼泽。 为了方便，本题中不存在山地和沼泽两种地形。 每个玩家开局只有一个国王塔，有若干士兵，分布在他&#x2F;她已占领的格子上（同一个格子不能同时被多个人占领）。他&#x2F;她需要移动某一格子上的士兵去占领尽可能多的格子，占领某一格子需要至少一个士兵。但占领后格子上也可以没有士兵，且此时依然占领着该格子。玩家需找到所有对手的国王塔，并占领之。若成功占领某一对手的国王塔，则对手死亡，对手当前格子均归该玩家所有，且对手所有格子上的士兵数量都将变为一半，即若当前格子中士兵数量为$x$，被占领后则变为$⌊\\frac{x+1}{2}⌋$。若所有对手的国王塔都已被占领，则该玩家在一局游戏中取得胜利。 若某个人占据了某个格子，该格子的增兵方式为： 1.若该格子为国王塔，城市或普通格子，在游戏开始后的每$25k$秒开始前，该格子的士兵数量加一。($k$为整数) 2.若该格子为国王塔或城市，将在游戏开始后的每一秒开始前，该格子的士兵数量加一。 注意，两种增兵方式互不影响，即在第$25k$秒开始前，国王塔与每个城市都将增加$2$个士兵。 现在游戏进行到了第$T$秒开始后。满足$T$是$25$的倍数。此时clay19共占据$x_1$个格子（包括国王塔和城市），$y_1−1$个城市，$1$个国王塔，共$z_1$个士兵； 此时clay17共占据$x_2$个格子（包括国王塔和城市），$y_2−1$个城市，$1$个国王塔，共$z_2$个士兵； 这时，老师进来了！只见clay19迅速地按下了Ctrl+Win+←；clay17也迅速地按下了Alt+Tab键。两个人的屏幕中出现了 VS code 的界面。上面都写着一段经典的代码 123456#include &lt;stdio.h&gt;int main()&#123; printf(&quot;Hello World\\n&quot;); return 0;&#125; 老师盯着他们好久好久，总感觉有点不对劲。毕竟，没有哪个人写代码是只用 WASD 键和鼠标的。 时间一分一秒地流逝，老师没有发现他们的秘密，终于离开了。这时，不太擅长打发育的clay17发现，clay19的士兵数量总和已经比她多了！ 她想知道，clay19第一次比她的士兵总和多的时间是多少。 也就是说，若clay17和clay19在$T$秒开始后不进行任何操作，你要找到最小的非负整数$x$，使得距离游戏开始的第 $T+x$ 秒开始后，clay19的士兵总和严格大于clay17的士兵总和。如果不存在这样的$x$，请输出$−1$。 输入第一行一个整数$n$，表示数据组数。 接下来$n$行，每一行$6$个整数，分别为$x_1,y_1,z_1,x_2,y_2,z_2$，意义如上所述。 显然，本题并不需要用到$T$，因为一定有$T$是25的倍数。 数据保证： $n≤10^5,1≤x_1,y_1,z_1,x_2,y_2,z_2≤10^8$ 输出共$n$行，每行一个整数，表示最小的非负整数$x$，若不存在$x$，请输出 $−1$。 输入样例1234567871 1 2 1 1 1102 3 10 128 2 34102 3 10 128 2 339982 2447 8734 9999 2445 3483459982 2445 4783 9900 2447 7638742 1 1 1 1 100000000100000000 100000000 1 1 1 100000000 输出样例12345670-12425727159305025000000002 THINK 这题先读懂它可能才是最难的部分 BV 只学习，不玩耍，聪明三月也变傻时间限制：1000ms 内存限制：65536kb 通过率：25&#x2F;120 (20.83%) 正确率：25&#x2F;469 (5.33%) 题目描述摸鱼摸累了，给大家送一道福利题。 clay17已经玩腻帝垣琼玉了，她决定去找三月七玩反转棋。 规则具体如下，现在有一个$n∗n$的棋盘，上面布满了黑白两色棋子。 每次操作可以选择一枚黑色棋子$A$，记这枚棋子坐标为$(x_0,y_0)$，操作者将把所有$x≤x_0,y≤y_0$的所有棋子进行颜色反转。（即以棋子$A$与$(1,1)$为顶点的矩形区域内，所有颜色反转）。 clay17与小三月轮流操作，先不能操作者判负。 由于小三月太可爱了，clay17决定让小三月选择先后手，小三月向你投来了求助的目光，你能帮帮她吗？ 输入第一行两个数，$n$，$T$。$n$为棋盘大小，$T$为黑色棋子总数。 接下来$T$行，每行2个数，$x_i，y_i$，表示黑子的坐标。 数据保证$n≤10^3,T≤10^5,1≤x_i,y_i≤n$。 输出若小三月选择先手可以获得胜利，请输出The Power of Cuteness 若小三月选择后手可以获得胜利，请输出Poder femenino 输入样例123410 31 57 33 2 输出样例1Poder femenino NOT Hint： 三月七：你不会真以为我傻了吧唧的吧！ THINK 无 BW WC，盒时间限制：1000ms 内存限制：65536kb 通过率：6&#x2F;19 (31.58%) 正确率：6&#x2F;60 (10.00%) 题目背景由于账号的分数被 SuB 清零了，破防的炸鱼勾们将 SuB 开盒，并决定线下真实他。好在，SuB 有自己的秘密基地，他能躲过炸鱼勾的追杀吗？ 题目描述在一条宽为 $n$ ，长为 $m$ 的大街上，SuB 住在大街一头的第 $y$ 个房间里 ，秘密基地在大街另一头的第 $y$ 个房间。 为了迷惑炸鱼勾，SuB 在逃亡的过程中会时不时地左右横跳；并且由于他不喜欢平的（even），他每一步只会向前跨过奇数（odd）格。 最后，SuB 躲进了他的秘密基地，为了基地的隐蔽性，基地大门6位密码锁的密码被设置为路径方案数的后 $6$ 位。 炸鱼勾由于长期炸鱼已经变得愚笨，凭他们那可怜的大脑并不能进入 SuB 的秘密基地，于是他们找到了你，希望你能帮助他们解开基地的密码。 题目翻译在一个 $n$ 行 $m$ 列的方格图上，起点为 $(y,1)$ ，终点为 $(y,m)$，从起点向右走任意步，每一步可以从 $(i,j)$ 到达 $(i−1,j+k),(i,j+k),(i+1,j+k)$，其中 $k$ 为奇数。 方案数指从起点到达终点的所有不同走法的数量 $p$ 。 你应该输出一个6位的数字 $p′&#x3D;p\\mod 1000000$。 输入第一行 22 个数 $n$ 和 $m$ ，表示大街的宽度和长度； 第二行一个数 $y$ ，表示家所在的行号。 输出一行 1 个数 $p′$ ，表示秘密基地的密码。 输入样例123 51 输出样例1000013 样例解释到达第 $5$ 列第 $1\\sim n$ 行的方案数分别为 $13,16,10$ 。 数据范围 对于 $20%$ 的数据，$1≤n≤10$ ， $2≤m≤10$ ； 对于 $50%$ 的数据，$1≤n≤20$ ， $2≤m≤10^5$ ； 对于 $100%$ 的数据，$1≤n≤50$ ， $2≤m≤10^18$ ； THINK 走地图，上网搜一下，方法还挺多的。先考虑简单的情况，可以知道在步长为1的情况下，可以有选择的打表——也就是动态规划：一个格子的路线数等于能到他的3个格子的路线数之和。遍历整个$n\\times m$的数组，就可以得到每个节点的路线数，但是此题步长为$k,k\\mod 2 &#x3D; 1,k\\in \\mathbb{N}$,而其$m$也非常大。仔细观察可知，整个过程中间的每一轮更新中都是一样的，因此可以简化直接计算。所以从左到右，可以把整个过程分成 BX 猜猜数据点时间限制：1000ms 内存限制：65536kb 通过率：165&#x2F;284 (58.10%) 正确率：165&#x2F;8487 (1.94%) 题目描述小 H 同学在做编程题时常常想，如果我能知道这道题所有的数据点，就可以面向结果编程了，那该多好！现在他终于有了这样的一个机会，请你来帮帮他实现他的愿望。 本题共计 10 个数据点，每个数据点的输入都是$[0,10]$ 之间的整数（可能有重复）。对于不为 $0$ 的输入 $x$ ，请输出第 $x$ 个数据点的输入的值；对于为 $0$ 的输入 $x$ ，请依次输出这 10 个数据点的输入的值。 输入输入 $x$ 为一个$[0,10]$ 之间的整数。 输出当输入 $x$ 不为 $0$ 时，输出包括一行，第一行包括一个整数，表示第 $x$ 个数据点的输入的值； 当输入 $x$ 为 $0$ 时，输出包括 10 行，每行包括一个整数，第 $i$ 行的整数表示第 $i$ 个数据点的输入的值。 输入样例 112 输出样例 110 输入样例 210 输出样例 2123456789102024114514 样例解释以上样例假设 $10$ 个数据点依次是 $2,0,2,4,1,1,4,5,1,4$ 。 THINK 这题原本简单，但是不知道为什么当时我脑瘫，没有意识到现实测试点就是它测的点……","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary6","slug":"Summary6","date":"2024-10-09T10:54:13.000Z","updated":"2024-10-09T11:08:09.553Z","comments":true,"path":"2024/10/09/Summary6/","permalink":"http://example.com/2024/10/09/Summary6/","excerpt":"$BO\\sim BT$","text":"$BO\\sim BT$ BO 钓鱼题时间限制：1000ms 内存限制：65536kb 通过率：470&#x2F;534 (88.01%) 正确率：470&#x2F;895 (52.51%) 题目背景Ender_hzEnder_hz 遇到了这样一套钓鱼题，但是他太弱了，于是来请教了会程设的你。请你帮他完成这套题目。 题目描述Ender_hzEnder_hz 拿到的题目是这样的： 这道题的答案是：A. $A$ B. $B$ C. $C$ D. $D$ 第 55 题的答案是：A. $C$ B. $D$ C. $A$ D. $B$ 以下选项中哪一题的答案与其他三项不同：A. 第 $3$ 题 B. 第 $6$ 题 C. 第 $2$ 题 D. 第 $4$ 题 以下选项中哪两题的答案相同：A. 第 $1,5$ 题 B. 第 $2,7$ 题 C. 第 $1,9$ 题 D. 第 $6,10$ 题 以下选项中哪一题的答案与本题相同：A. 第 $8$ 题 B. 第 $4$ 题 C. 第 $9$ 题 D. 第 $7$ 题 以下选项中哪两题的答案与第 88 题相同：A. 第 $2,4$ 题 B. 第 $1,6$ 题 C. 第 $3,10$ 题 D. 第 $5,9$ 题 在此十道题中，被选中次数最少的选项字母为：A. $C$ B. $B$ C. $A$ D. $D$ 以下选项中哪一题的答案与第 11 题的答案在字母表中不相邻：A. 第 $7$ 题 B. 第 $5$ 题 C. 第 $2$ 题 D. 第 $10$ 题 已知 ⌈⌈第 $1$ 题和第 $6$ 题的答案相同⌋⌋ 与 ⌈⌈第 XX 题和第 $5$ 题的答案相同⌋⌋ 的真假性相反，那么 XX 为：A. $6$ B. $10$ C. $2$ D. $9$ 在此 $10$ 道题中，$ABCD$ 四个字母出现次数最多与最少者的差为：A. $3$ B. $2$ C. $4$ D. $1$ 请你用任意方法（抄袭除外）完成这道题并提交答案。 输入无 输出一行 $10$ 个大写字母 $a_1a_2…a_{10}$，不含空格，$a_i\\in${A,B,C,D}，表示第 $i$ 题的答案。 注意是你的程序 输出 答案，而非直接提交选项！ 输出样例1AAAAAAAAAA Hint 输出样例仅供格式参考，不代表真实答案； 如果你想，可以试试手算； 如果认为某道题的判断难以实现，可以尝试跳过，最后人工核验。 Author: Ender_hzEnder_hz. Think 网上的一道逻辑题，程序化解决就是对选项节点进行 dfs 暴力搜索 BP 宝石迷阵 (Bejeweled)时间限制：1000ms 内存限制：65536kb 通过率：4&#x2F;31 (12.90%) 正确率：4&#x2F;114 (3.51%) 题目描述WIKI 最近迷恋上了宝石迷阵, 她给她最好的朋友 NonFriedChips 出了一道题, 做不出来要狠狠惩罚 NonFriedChips NonFriedChips 不想被 WIKI 狠狠惩罚, 于是她找到了你, 想让你帮她做出来这道题 注意, 玩过宝石迷阵并不会帮助理解题意, 请仔细阅读, 该题和普通三消规则并不相同 现在有 $n$ 个宝石排成一列, 每个宝石有一个颜色 $a$ 每次操作都将进行以下两步 选择不在最后的一个宝石 $i$, 且有宝石颜色标号 $a_i&#x3D;i$ 消除该宝石及它紧邻后面的一个宝石, 消除之后后面的宝石将会向前移动与前面部分相连 请求出你最多能操作的次数 输入每个测试包含多个测试用例。输入的第一行包含一个整数 $t (1≤t≤100)$ —— 测试用例的数量。每个测试用例的描述如下： 每个测试用例的第一行包含一个整数 $n (1≤n≤800)$ —— 宝石的数量 每个测试用例的第二行包含 $n$ 个整数 $a_1,a_2,…,a_n (1≤a_i≤n)$——每个宝石的颜色 保证所有测试用例中的 $n$ 之和不超过 800 输出对于每个测试用例，输出一个整数 —— 可以执行操作的最大次数。 样例输入123151 5 3 2 4 样例输出12 BQ 身高问题（concert）时间限制：1000ms 内存限制：28672kb 通过率：6&#x2F;21 (28.57%) 正确率：6&#x2F;64 (9.38%) 题目描述日本演唱会门票的售卖方式是先抽后卖，所以如果想要抢到一个好的位置一定不要忘记参与抽选活动哦！由于位置抽选的方式是随机的，可能会在观看演唱会时出现这种情况：前面的人比后面的人高，导致到后面的看不到小绿毛。 同一排上的观众是不会相互遮挡的，所以我们在这里只在意一列长度为 $n$ 的座位。从舞台向外将座位编号为 1,2,…,n1,2,…,n，且这 $n$ 的人的身高是 1,2,…,n1,2,…,n。如果位置 $i$ 的人前面有 aa 个比他要高的人，那么他就会产生 aa 点怒气。对于这 $n$ 个人，一个座位顺序的怒气值 AA 是所有人的怒气和，每个人坐到每个位置的概率是相等的。你坐在 SVIP 座，所以不参与排座，看着他们生气会产生 kA+A2kA+A2 的惬意（什么资本家。。。）。 现在你想知道，对于所有可能的座位顺序，你产生的惬意总和。答案对 109+7109+7 取模。 简要题意： 设 PP 为任意一个 1∼n1∼n 的排列，τ(P)τ(P) 为其中的逆序对个数，求（答案对 109+7109+7 取模） ∑p∈permutation(n)(kτ(P)+τ2(P))∑p∈permutation⁡(n)(kτ(P)+τ2(P)) 输入格式本题为多组数据，第一行为数据组数 TT。 对于每组数据，一行两个正整数 $n$，kk。意义为题目中所述。 输出格式对于每组数据，一行一个整数。 样例输入 #11213 2 输出 #1140 说明&#x2F;提示对于 10%10% 的数据：T&#x3D;1,n≤10,k≤2T&#x3D;1,n≤10,k≤2 对于 30%30% 的数据：T&#x3D;1,n≤100,k≤2T&#x3D;1,n≤100,k≤2 另外有 5%5% 的数据：n&#x3D;1,k≤1e9n&#x3D;1,k≤1e9 对于 100%100% 的数据：∑n≤107,T≤106,2≤k≤109∑n≤107,T≤106,2≤k≤109 对于 0%0% 的数据：∑n≤1012∑n≤1012 BR 捅似你喵时间限制：2000ms 内存限制：65536kb 通过率：3&#x2F;20 (15.00%) 正确率：3&#x2F;53 (5.66%) 题目背景“你吃的是什么喵？分我一点喵？什么，这不是我的分吗喵！不要吃我的分喵！不要吃了喵！捅似你喵！捅似你喵！捅似你喵！”长久地被炸鱼勾折磨，SuB 对炸鱼勾的怨念越来越深了。在一个月黑风高的夜晚，SuB 黑进了游戏的服务器，并锁定了几个炸鱼勾的账号，现在他准备将他们匹配到一起，体会体会掉分的痛苦！ 题目描述SuB 将炸鱼勾排成了一个 n×mn×m 的矩阵，他每次可以选择将任意一个子矩阵中的炸鱼勾分配到一个房间，并且在暗箱操作下，他可以保证每个人都能掉 1 分。 但是，由于段位保护，如果一个炸鱼勾的分数归零，那么他将无法再被匹配进房间，即是说，炸鱼勾的分数不能为负数。 现在，SuB 想知道，他最少需要操作几次，才可以使所有炸鱼勾的分数归零。 输入第一行两个正整数 $n$ 和 $m$ ； 接下来 $n$ 行，每行 mm 个正整数 ai,jai,j ，表示炸鱼勾的初始分数。 输出共一个数，表示 SuB 最少所需的分配次数。 输入样例12343 42 4 4 24 8 8 42 4 4 2 输出样例18 样例解释 如图所示，分别将这四个子矩阵中的炸鱼勾分配到一起各 22 次，即可使所有炸鱼勾的分数归零。 数据范围 对于 20%20% 的数据， 1≤n,m≤101≤n,m≤10 对于 60%60% 的数据， 1≤n,m≤1001≤n,m≤100 对于 100%100% 的数据， 1≤n,m≤200,0≤ai,j≤1061≤n,m≤200,0≤ai,j≤106 Not Hint似了喵。。 BS Contrasty Angeles时间限制：1000ms 内存限制：65536kb 通过率：6&#x2F;16 (37.50%) 正确率：6&#x2F;36 (16.67%) 题目背景露薇娅和芦苇鸭是一体两面的好朋友。 她们住在环形小镇的两端。环形小镇从 11 到 $n$ 顺序编号，共有 $n$ 条双向道路，露薇娅住在 ss，而卤味鸭住在 $t$。 这天，露薇娅收掉了定数最高的魔王曲「Contrasty Angeles」，想要去和芦苇鸭炫耀一下。 但是天空依然在下着雨。虽然她并不会被雨淋湿，也不会因为淋雨而陷入梦境，但经过水坑仍是很麻烦的事情。 于是她把这个问题交给了你，想要知道：假设每个道路的长度在整数区间 [1,m][1,m] 中随机选取且已知，从 ss 到 $t$ 最短路径的长度期望是多少？ 同时，她发现你可能不会分数的模运算，于是她为了让你能够输出整数，你可以输出期望值乘以 mnmn。 同时由于答案可能非常大，你的答案应该对 109+7109+7 取模。 题目描述与上文题目背景等价。 给定一个 $n$ 个节点的环，节点依次编号为 1,2,3,⋯,n1,2,3,⋯,n。 很明显该环有双向边 (1,2),(2,3),(3,4),⋯(n−1,n),(n,1)(1,2),(2,3),(3,4),⋯(n−1,n),(n,1)，共有 $n$ 条边。 通过这些边可以从一个节点走到相邻的节点上。显然任意两个节点之间可以互相到达。 给定正整数 $m$，这 $n$ 条边的距离可能在 { 1,2,3,⋯,m−1,m1,2,3,⋯,m−1,m } 中等概率随机选取。 显然，这 $n$ 条边各有 $m$ 种可能，所以一共有 mnmn 种可能的不同选取方案。 给定起点 ss 和终点 $t$，求从 ss 到 $t$ 最短路径在这 mnmn 种情况下的和。 答案对 109+7109+7 取模。 形式化题面与上文题目描述等价。 我们令从 vv 到 v+1v+1 的边 (v,v+1)(v,v+1) 的长度设为 evev。特别地，边 (n,1)(n,1) 的长度为 enen。 求： answer&#x3D;∑e1&#x3D;1m∑e2&#x3D;1m⋯∑en&#x3D;1mdistance(s,t)mod109+7&#x3D;∑(e1,e2,⋯,en)∈1,2,⋯,mnmin{es+⋯+et−1,et+⋯+en+e1+⋯+es−1}mod109+7answer&#x3D;∑e1&#x3D;1m∑e2&#x3D;1m⋯∑en&#x3D;1mdistance(s,t)mod109+7&#x3D;∑(e1,e2,⋯,en)∈1,2,⋯,mnmin{es+⋯+et−1,et+⋯+en+e1+⋯+es−1}mod109+7 输入格式共两行，第一行为两个由空格分隔的正整数n,mn,m，第二行为两个由空格分隔的正整数 s,ts,t。 输出格式一行一个整数，代表答案。 样例输入 #1123 21 2 样例输出 #1112 样例解释 #1这是一个节点数为 33 的环，共 33 条边，每条边长度在{ 1,21,2 } 间随机，共 23&#x3D;823&#x3D;8 种情况。要找的路径从 11 到 22。 当边 (1,2)(1,2) 长度为 11 时，最短路径长度一定是 11，共 44 种情况。 当边 (1,2)(1,2) 长度为 22 时，最短路径长度一定是 22，共 44 种情况。 答案为 1×4+2×4&#x3D;121×4+2×4&#x3D;12。 样例输入 #2124 32 4 样例输出 #21272 样例解释 #2这是一个节点数为 44 的环，共 44 条边，每条边长度在 { 1,2,31,2,3 } 间随机，共 34&#x3D;8134&#x3D;81 种情况。要找的路径从 22 到 44。 可以发现有两条路可走：A:2→3→4A:2→3→4 或 B:2→1→4B:2→1→4。 可以证明，路径 A,BA,B 均有 32&#x3D;932&#x3D;9 种可能，长度为 2,3,4,5,62,3,4,5,6 的可能分别为 1,2,3,2,11,2,3,2,1。 因此，路径 A,BA,B 长度最小值可能是 2,3,4,5,62,3,4,5,6，可能为 17,28,27,8,117,28,27,8,1。 答案为 2×17+3×28+4×27+5×8+6×1&#x3D;2722×17+3×28+4×27+5×8+6×1&#x3D;272。 样例输入 #3128 62 4 样例输出 #3111755310 样例输入 #41240 5020 30 样例输出 #41536456982 数据范围对于 30%30% 的数据，n≤5,m≤5,s&#x3D;1,t&#x3D;$n$≤5,m≤5,s&#x3D;1,t&#x3D;n。 对于 80%80% 的数据，n≤50,m≤50n≤50,m≤50。 对于 100%100% 的数据，1≤s≤t≤n≤500,m≤5001≤s≤t≤n≤500,m≤500。 Hint一个方便理解的样例： 当 n&#x3D;6,s&#x3D;1,t&#x3D;5,e1&#x3D;1,e2&#x3D;2,e3&#x3D;3,e4&#x3D;4,e5&#x3D;5,e6&#x3D;6n&#x3D;6,s&#x3D;1,t&#x3D;5,e1&#x3D;1,e2&#x3D;2,e3&#x3D;3,e4&#x3D;4,e5&#x3D;5,e6&#x3D;6 时： 从起点 s&#x3D;1s&#x3D;1 到终点 t&#x3D;5t&#x3D;5 的最短路径长度为 1+2+3+4&#x3D;101+2+3+4&#x3D;10。另一条路的长度为 5+6&#x3D;115+6&#x3D;11，不是最短路径。 哎音游人真的是 BT mod 2024时间限制：1000ms 内存限制：65536kb 通过率：239&#x2F;364 (65.66%) 正确率：239&#x2F;1068 (22.38%) 题目背景本题由同学供题，助教代为上传 题目描述输入两个自然数 m,nm,n，求出 $n$ 除以 $m$ 的余数。 输入两个自然数 m,nm,n。 输出$n$ 除以 $m$ 的余数。 输入样例12911000000000000000000000000 输出样例11 数据范围$1≤m≤10^9,0≤n&lt;10^{106}$ 出题人：tb148","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary5","slug":"Summary5","date":"2024-10-09T10:50:58.000Z","updated":"2024-10-09T11:46:51.253Z","comments":true,"path":"2024/10/09/Summary5/","permalink":"http://example.com/2024/10/09/Summary5/","excerpt":"$BH\\sim BN$","text":"$BH\\sim BN$ BH clay17与帝垣琼玉时间限制：1000ms 内存限制：65536kb 通过率：52&#x2F;72 (72.22%) 正确率：52&#x2F;121 (42.98%) 题目描述clay17闲来无事和青雀一起摸鱼。 桌面上现有A张“摸鱼牌”和B张“普通牌”， 随机打乱顺序后放在桌面上，开始一张一张地翻牌。 翻到摸鱼牌，青雀可以安全的摸鱼，快乐指数$+1$； 翻到普通牌，青雀则会担心这是符玄要来抓自己的不好兆头，快乐指数$−1$。 青雀最初快乐指数为$0$，并且在翻牌过程中可以随时停止翻牌，青雀在最优策略下平均快乐指数$S$是多少。 输入两个数字$A$，$B$（$A,B≤1000$） 输出输出一行，表示$S$的值，保留两位小数 输入样例110 10 输出样例11.61 THINK 开始直接想错了，他这个最优策略指的是按照当前手中的排来决策是否取下一张牌——果然是个赌徒，没输个精光就不肯罢休。 然后有意思的是这个决策过程就可以写成二维的动态规划，一个状态$DP[i][j]$由上两个状态$DP[i-1][j]和DP[i][j-1]$概率决定 BI Sayrafiezadeh 1994时间限制：100ms 内存限制：65536kb 通过率：350&#x2F;523 (66.92%) 正确率：350&#x2F;2455 (14.26%) 描述如果一年有 $365365365365365365365365$ 天，那么 $365365365365$ 人的生日互不相同的概率是多少？ 输入12365365365365365365365365365365365365 输出将答案保留 6 位小数输出。 提示因为输入是固定的，所以你可以自己算出答案后再让提交的程序直接输出你已经算出的答案。 为什么本题是这个名字呢？真的好奇怪哦！ THINK 生日问题，还有其他的一些随机事件，和一些概率分布律是密切相关的。这里搜索题目可知一个生日问题的近似公式手算或者计算机都可以Python处理这种问题就比较方便了 BJ Bubble-sort 2024时间限制：100ms 内存限制：65536kb 通过率：254&#x2F;306 (83.01%) 正确率：254&#x2F;548 (46.35%) 描述$365365365365365365365365$ 个不同元素在冒泡排序倒数第 $365365365365$ 轮开始时已经有序的概率是多少？ 输入12365365365365365365365365365365365365 输出将答案保留 $6$ 位小数输出。 提示因为输入是固定的，所以你可以自己算出答案后再让提交的程序直接输出你已经算出的答案。 为什么本题是这个名字呢？真的好奇怪哦！ 说明不同教材中冒泡排序的定义不完全相同，而在本题中我们认为 $n$ 个元素的冒泡排序共 $n$ 轮。 对于 $3$ 个不同元素的冒泡排序，注意到： $(1,2,3)$ 在倒数第 $3$ 轮冒泡排序开始时已经有序。 $(1,2,3)$ 和 $(1,3,2),(2,1,3),(3,1,2)$ 在冒泡排序倒数第 2 轮开始时已经有序。 $(1,2,3)$ 和 $(1,3,2),(2,1,3),(3,1,2)$及 $(2,3,1),(3,2,1)$ 在冒泡排序倒数第 11 轮开始时已经有序。 从而 $3$ 个不同元素在冒泡排序倒数第 $x$ 轮开始时已经有序的概率大约是 $\\exp(\\frac{3x^2-3x}{4x-22})$。 倒数第 $3$ 轮开始时 倒数第 22 轮开始时 倒数第 11 轮开始时 $(1,2,3)$ $(1,2,3)$ $(1,2,3)$ $(1,3,2)$ $(1,2,3)$ $(1,2,3)$ $(2,1,3)$ $(1,2,3)$ $(1,2,3)$ $(2,3,1)$ $(2,1,3)$ $(1,2,3)$ $(3,1,2)$ $(1,2,3)$ $(1,2,3)$ $(3,2,1)$ $(2,1,3)$ $(1,2,3)$ THINK 其实下面公式都给出来了，上网搜一下也可以找到这个瑞利分布公式 BK clay17与milkteam时间限制：1000ms 内存限制：65536kb 通过率：15&#x2F;35 (42.86%) 正确率：15&#x2F;127 (11.81%) 题目描述clay17为了喝到新鲜的奶茶，决定建造养牛场。由于她对奶茶的高要求，她决定引入一种新品种牛，由于预算优先，她最多只能引入$n$头新品种奶牛。 好消息是，这种新品种奶牛可以根据与其他奶牛的位置关系进行快速繁殖。具体来说，若在养牛场的格子A处(坐标为$(x,y)$)，以国际象棋中马的走法能走到的8个格子中，只要有至少4头奶牛，那么A处会在下一秒立即生成一头奶牛。 经过$$10^{100}$$秒后，奶牛数目将保持不变，即此时若继续有合法的格子，奶牛也不会生成。 现在，请聪明的你帮帮clay17，编排这$n$头奶牛的位置，使最后场上的奶牛尽可能多。 clay17也没有特别高的期待，你只需要使最后场上的奶牛数目至少为$⌊\\frac{n^2}{10}⌋$，便可以通过测试。 输入一个数$n$，保证$n≤1000$ 输出输出$n$行，每行2个数，第$i$行的两个数，表示最开始第$i$个奶牛的坐标$(x_i,y_i)$ 请你保证你的输出满足不会有两头奶牛出现在同一位置，且$−10^8≤x_i,y_i≤10^8$，且输出均为整数。(奶牛多于$n$头时,clay17只会保留前$n$头) 输入样例110 输出样例123456789101 12 23 34 45 56 67 78 89 910 10 THINK 难点在于理解题目，然后就是对各种摆法计算可能的值 长条状，必须是两排(两侧都可以)，这样才能最大化复用已有的元素，$l&#x3D;n&#x2F;2,h&#x3D;n&#x2F;2&#x2F;4,sum&#x3D;n+2*(l*h)&#x2F;2&#x3D;n+n^2&#x2F;16$,上限有些差 然后是十字形（回想高中生物“五点采样法”这是有统计学原理的），4个凹槽可以复用，理论值$l&#x3D;n&#x2F;4,a&#x3D;l&#x2F;\\sqrt(2),h&#x3D;a&#x2F;4,S&#x3D;l^2&#x2F;2+l^2&#x2F;4&#x3D;3n^2&#x2F;64$ $L$形，$l&#x3D;n&#x2F;2&#x2F;2,a&#x3D;\\sqrt 2l,h&#x3D;a&#x2F;4,S&#x3D;n^2&#x2F;16+n^2&#x2F;64+2l*l&#x2F;4&#x2F;2&#x3D;9n^2&#x2F;64$ 大于要求的界限，OK 但是下一题需要$[\\frac{n^2}{7}]$这就太接近下限了，可能需要精确计算每个点的摆放位置（时间远大于，不需要考虑） BL milkteam与clay17时间限制：1000ms 内存限制：65536kb 通过率：5&#x2F;19 (26.32%) 正确率：5&#x2F;41 (12.20%) 题目描述其它相同，除了 clay17也没有特别高的期待，你只需要使最后场上的奶牛数目至少为$⌊\\frac{n^2}{7}⌋$，便可以通过测试。 BM Find password时间限制：1000ms 内存限制：65536kb 通过率：4&#x2F;17 (23.53%) 正确率：4&#x2F;45 (8.89%) 题目背景Koishi擅自给懒鱼的家门口上了一道锁，现在懒鱼没法回家了。为了回家，懒鱼需要想办法解开这把锁。 题目描述具体来说，这把锁上有一列有 $n$ （$1≤n≤10^3$）个滑块，最初处于解锁状态时，第 $i$ 个位置上的滑块标有数字 $i$。Koishi随意打乱了这些滑块之后，锁定了这把锁。此时，第 $i$ 个位置上的滑块标有的数字变成了 $a_i$，此时所有 $a_i$ 恰好组成一个 $1\\sim n$ 的排列。 锁定这把锁之后，你每次可以选择两个位置上的滑块，记其所在位置为 $l,r$（$l&lt;r$），并将其交换，但需要满足两个奇怪的性质： 至少存在一个被选定的位置 $pos$ 满足，在最初这把锁锁定的时候，该位置上的滑块标有的数字为 $pos$。 在之前的所有操作中，未对位置为 $l,r$ 的滑块进行交换。 当对于所有 $i∈[1,n]$，第 $i$ 个位置上滑块上标有数字 $i$ 时，锁就再次恢复解锁状态，懒鱼就可以回家了。 然而，由规则可知，这把锁的解锁没有什么试错机会，因此懒鱼希望你能够写一个程序，直接输出正确的操作过程。 当然，也许实际上这把锁根本没法解锁，此时请你也务必告知懒鱼。 输入第一行一个正整数 $n$（$1≤n≤10^3$），表示滑块个数。 第二行一行 $n$ 个正整数，第 $i$ 个正整数 $a_i$（$1≤a_i≤n$）表示从左到右第 $i$ 个滑块上标有的数字。保证所有的 $a_i$ 恰好组成一个 $1 \\sim n$ 的排列。 输出若这把锁无法解锁，输出一行一个整数 $−1$。 否则，第一行输出一个自然数 $k\\ (0≤k≤2×10^4)$，表示你接下来会执行的操作个数。可以证明，若这把锁可以解锁，则$ 2×10^4$ 步以内必定能解锁。 接下来 $k$ 行，每行两个正整数 $l,r$（$1≤l&lt;r≤n$），表示选择交换的两个滑块。 输入样例1251 5 2 4 3 输出样例123456761 41 24 51 53 42 4 提示 如果一开始满足条件1的位置太少了，那么一定无法还原。但是，实际上你也不需要用到很多位置。 在样例里，初始状态时，位置2上的数是5，位置5上的数是3，位置3上的数是2。 Author：一只懒懒懒懒懒鱼 THINK 无 BN J 博弈 (game)时间限制：1000ms 内存限制：65536kb 通过率：15&#x2F;42 (35.71%) 正确率：15&#x2F;117 (12.82%) 题目描述WIKI 和 NonFriedChips 在玩游戏，一开始序列中有 $n$ 个 1 ( $n$ 为偶数)， 每一轮游戏，wiki 先从序列中取出两个数字 $x,y$ ，然后删掉他们，之后NonFriedChips 要从 $x+y$ 和$|x−y|$ 中选一个添加到序列中。 当序列中存在有某数大于其他数字之和或者所有数都是 0 时结束游戏。 结束后序列中每有一个数字 NonFriedChips 就要给 WIKI 一块薯片，WIKI 希望自己拿到的薯片尽可能多， NonFriedChips 希望自己给的薯片尽可能小，两人都采用最优策略的情况下 WIKI 最多能拿到多少薯片？ 输入格式第一行一个 $t$ 表示游戏轮数 后面 $t$ 行整数 $n$ 表示每轮游戏开始时 1 的个数 输出$t$ 行整数表示两人在最优策略下 WIKI 最多拿到的薯片 输入样例1212 输出样例11 数据范围$1≤t≤10^4$ $1≤n≤10^{18}$ THINK 本题名字就是提示，这是一类博弈游戏 但这里的关键点是删两个，添一个，每一轮如果是奇数则不能完全匹配，导致会余下一个数 样例给的少，自己构建几个就会发现两个对局者的最优策略是： -","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary4","slug":"Summary4","date":"2024-10-09T10:49:50.000Z","updated":"2024-10-09T11:55:38.342Z","comments":true,"path":"2024/10/09/Summary4/","permalink":"http://example.com/2024/10/09/Summary4/","excerpt":"$BA\\sim BH$","text":"$BA\\sim BH$ BA 咸鱼退休科学时间限制：1000ms 内存限制：65536kb 通过率：313&#x2F;395 (79.24%) 正确率：313&#x2F;1442 (21.71%) 题目描述21 岁高龄的某咸鱼同学想要退休了！今天，他和男生小M和女生小F一起探讨了自己的退休事宜。 延迟退休的规则是这样的：从2025年1月1日起，男职工（原法定退休年龄六十岁）和原法定退休年龄为五十五周岁的女职工，法定退休年龄每四个月延迟一个月，分别逐步延迟至六十三周岁和五十八周岁。 如果你感受到上面的规则有些抽象，你可以从 这里 获得更多的样例。 男生小M和原本五十五岁退休的女生小F想知道自己经过调整后会在哪一年哪一月退休。 输入多组数据输入 每组数据一行，格式为 yyyy mm X，含义如下： yyyy 为年份，保证 $1900≤yyyy≤2024$； mm 为月份，保证 $1≤mm≤12$，月份有前导零； X 为性别，保证为 M （男性）或 F （女性）的一种； 本题数据中的女性均为原本五十五岁退休的女性。 保证数据组数少于 $10000$ 组。 输出对于每组数据，输出一行，格式为 yyyy mm，即退休年月。月份为两位数，输出前导零。 输入样例12341973 06 F1952 10 M1966 12 M2003 08 F 输出样例12342029 052012 102027 062061 08 THINK 看到这题不得不说中国的老龄化已经严重到这种程度了……心忧国家，能做些什么呢？ 最简单的思路就是看题意直接下手，但是点击这里之后有一张具体的延期表，这对数据分析当然就方便很多了 BB s7h 的邪恶计划时间限制：1000ms 内存限制：65536kb 通过率：36&#x2F;100 (36.00%) 正确率：36&#x2F;324 (11.11%) 题目描述 你说得对，但是 BUAA是一款全新 VR 开放世界游戏，在 BUAA 的世界中，玩家将扮演名为 BUAAer 的神秘角色，在大学生活中邂逅性格各异的同学们，和他们一起战胜一一个学科，逐步发掘 毕业 的真相。 作为这款游戏的大boss，邪恶的 s7h 可不想让玩家们这么容易的通关。 在 BUAA 中，每个 BUAAer 需要学习 $n$ 个学科，每个学科有 $\\frac{a_i}{100}$ 的几率挂科。 作为 BUAA 阻挠玩家通关的幕后黑手之一，s7h 具有一项超能力，他可以任选一个 $i (1≤i&lt;n,a_i&gt;0,a_i+1&lt;100)$，使 $a_i$ 变为 $a_i-1$ ，使$a_{i+1}$ 变成 $a_{i+1}+1$。 s7h 具有无限的魔力，可以进行任意次的操作，现在他想知道，经过这样的操作后，BUAA 的学生挂掉所有学科的最大概率是多少。 请计算 该概率乘以 $100^n$ 后的值，答案对 $998244353$ 取模。 输入第一个数为学科总数 $n$。 接下来一行，输入 $n$ 个正整数，第 i 个数代表 $a_i$ 的值 ( 保证 $0≤a_i≤100,n≤100$ )。 输出一个整数，代表BUAAer挂掉所有学科的概率乘以 $100^n$后的值，答案对 $998244353$ 取模。 输入样例1244 3 2 1 输出样例136 样例解释: 经过多次操作后可以把数列变为 2 2 3 3 ，此时应挂掉所有学科 的概率乘以 $100^4$ 为 $36$ 。 可以证明样例没有更优解。 PS： 请有竞赛基础的同学思考：如果本题的数据范围改为 $n\\le 2\\times 10^5$ ，该如何解决本问题。 THINK 简单分析，题目是要求改变后的$\\Pi_{i&#x3D;1}^n a’_i$ 的最大值，由均值不等式（柯西不等式，向量不等式）可知，当$a’_i$ 的方差$D(x)$最小的时候，函数到达最大值，而$a’_i$的状态又是由初始序列和操作决定的（可以说成是一个有限状态机，也可以说是一个线性空间上的向量变化）仔细分析操作$\\Gamma(i)$可知，它只能使前面的数减小，后面的数增加。如果要向者均值不等式靠近，则最终结果是尽量形成一个变化比较平缓的递增的序列，此时求连乘就是最大值 八卦 开局“BUAA是一个开放世界游戏”，这好像在哪里听说过，但却想不起来了 BC 超级数组加密国庆版时间限制：1000ms 内存限制：65536kb 通过率：201&#x2F;218 (92.20%) 正确率：201&#x2F;314 (64.01%) 题目描述有一串长度为 $n$ 的数 $a_1,a_2,⋯,a_n$，$0≤a_i≤108$，它们组成一个数组。出于某种原因，Gino 想把这个数组加密，于是他找来三位操作员，让他们分别将原数组 $a$ 按照以下方式加密数组任意正整数次： 任选一个数字 $i$，$2≤i≤n−1$，将 $a_i$ 加上 2，将 $a_i−1$ 和 $a_i+1$ 都减去 1 可是，其中一位操作员听错了 Gino 的要求，他会按照这个方式来加密数组任意正整数次： 任选一个数字 $i$，$2≤i≤n−2$，将 $a_i$ 加上 $3$，将 $a_{i-1}$ 减去 $2$，将 $a_{i+1}$ 减去 $1$ 请你根据三位操作员加密完毕后得到的数组，判断是哪位操作员听错了要求，使用错误的方法加密了数组，并计算出他进行了多少次的错误操作？ 注意你并不需要求出另外两名操作员的操作次数。 数据保证三位操作员都进行了不少于 1 次操作，不多于 $10^8$ 次操作。 输入第一行一个正整数 $t$，代表数据组数，$1≤t≤10^4$。 对于每组数据，第一行一个正整数 $n$，代表数组长度，$5≤n≤10^5$。 接下来三行，每行 $n$ 个整数 $a_1,a_2,⋯a_n$，$−9×10^8≤a_i≤9×10^8$，代表三位操作员分别完成加密操作后得到的三个加密后数组。 数据保证 $\\sum n\\le 3\\times 10^5$，即所有数据的 $n$ 的总和不超过 $1\\times 10^5$。 数据保证，三位操作员得出的数组是由同一个原始数组通过以上操作得到的。 输出对于每组数据，输出一行两个正整数 $k,m$，含义为第 $k$ 位操作员听错了 Gino 的要求，使用了错误的方法加密数组，而他操作了 $m$ 次。 输入样例123456789250 4 2 4 50 3 4 3 51 0 6 3 550 3 0 1 1-1 2 3 0 10 3 -1 3 0 输出样例123 12 2 样例解释对于第一组样例，原始数组为 ${1,2,3,4,5}$，操作员 1 正确加密了 $1$ 次，操作员 2 正确加密了 $2$ 次，操作员 3 错误加密了 $1$ 次。 对于第二组样例，原始数组为${1,1,1,1,1}$，操作员 1 正确加密了 $1$ 次，操作员 2 错误加密了 $2$ 次，操作员 3 正确加密了 $2$ 次。 提示本题改编自《程序设计基础（信息类）》的「数组加密」，需要提示的同学请向助教索要「数组加密」的题解。 Author: Gino, Saisyc THINK 观察一个操作$\\Gamma(i)$对于序列的影响，正常的操作使得前后之和为0，而错误的操作使得操作前后多一个树或者笑少一个数。比较三个序列的和就可以方便地知道谁听错了，而且还能算出听错的人操作了多少步——思考：能推导出正确的操作员操作了多少步吗？ BD 算数天书与祖龙神殿国庆版时间限制：1000ms 内存限制：65536kb 通过率：6&#x2F;16 (37.50%) 正确率：6&#x2F;94 (6.38%) 描述算数天书推演万物，其中的每一卷都分为青龙篇、白虎篇、朱雀篇、玄武篇，满足如下推演规则： 对于算数天书每一卷的青龙篇，将其中的每一个 + 都分别替换为 *，就能得到这一卷的白虎篇。 对于算数天书每一卷的白虎篇，将其中的每一个 - 都分别替换为 /，就能得到这一卷的朱雀篇。 对于算数天书每一卷的朱雀篇，将其中的每一个 * 都分别替换为 +-，就能得到这一卷的玄武篇。 对于算数天书每一卷的玄武篇，将其中的每一个 / 都分别替换为 +，就能得到下一卷的青龙篇。 算数天书的第 11 卷的青龙篇、白虎篇、朱雀篇、玄武篇分别是 +、*、*、+- 。 祖龙神殿充满机缘，其中的每一个传送阵都会通往一个祖龙秘境。对于任意正整数 $p$，想要灵力值为 $p$ 祖龙秘境中的祖龙传承，在这个秘境中向祖龙供奉的灵石的数量必须等于算数天书第 $p+1$ 卷青龙篇前 $p−1$ 个字符中中的 + 的数量。 注意，由于空间法术会受到天道的限制，对于任意正整数 $q$，祖龙神殿的第 $q$ 个传送阵通往的祖龙秘境的灵力值为 $r^q \\mod 2^{32}$ 。 输入一个空格隔开的二个不大于 $10^8$ 的正整数 $r,n$ 。 输出一个自然数，表示获得祖龙神殿的前 $n$ 个传送阵通往的祖龙秘境的全部祖龙传承所需的灵石的总数量。 输入样例 1131 1 输出样例 1119 输入样例 2113 31 输出样例 2131944950506 提示当 $r&#x3D;31$ 时，祖龙神殿的第 1 个传送阵通往灵力值为 $31$ 的祖龙秘境，想要获得灵力值为 $31$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $19$ 块灵石。 想要获得灵力值为 $1$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $0$ 块灵石。 想要获得灵力值为 $2$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $1$ 块灵石。 想要获得灵力值为 $3$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $1$ 块灵石。 想要获得灵力值为 $4$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $2$ 块灵石。 想要获得灵力值为 $5$ 的祖龙秘境中的祖龙传承，就必须向祖龙供奉恰好 $3$ 块灵石。 建议真的可以不使用浮点数哦！ 想想为什么 $⌊\\frac{3}{5}×31⌋≠19&#x3D;⌊\\frac{8}{13}×31⌋&#x3D;⌊\\frac{21}{34}×31⌋$吧！ THINK 此题迭代规律比较好找，4元循环，青龙卷每加一卷就是将上一卷的+替换成+-，将-替换成+。但是数据值巨大，必然不是由迭代计算出来的，显然是没有找对规律，一直把这题搁置到了结束——存属于拖延症了 BE Deadline 的艺术（进阶版）时间限制：1000ms 内存限制：65536kb 通过率：59&#x2F;102 (57.84%) 正确率：59&#x2F;312 (18.91%) 题目描述经过一段时间的学习，熊大现在已经可以接受更加复杂的 ddl 了。现在的 ddl 不仅仅是一个月内的了，还有可能是许多年以后的 ddl…… 此外，因为熊大计组学疯了，他忘记了一些 ddl。其中有些 ddl 他是不记得日期了，却记得该 ddl 还剩多少天；有些 ddl 他记错了，该日期是不合法的；还有一些是完全忘记了，那就没办法了…… 现在熊大想在不同时间来问你关于他的 ddl 的事情…… 输入第一行一个正整数 $T$，表示有 $T$ 组数据，每组表示一次询问。 接下来 $T$ 行，每行 $2$ 到 $3$ 个非负整数 $a,b,c$，分别以一个空格分隔。 第一个非负整数 $a$ 固定为 8 位，表示当前的日期，格式为 YYYYMMDD。 第二个非负整数 $b$ 只可能是 0,1,2 中的一个，对应题目描述中的三种情况。 若 $b$ 为 0，则第三个非负整数 $c$ 表示该 ddl 距离当前日期有多少天。 若 $b$ 为 1，则第三个非负整数 $c$ 固定为 8 位，表示 ddl 的日期，格式同第一个整数。 若 $b$ 为 2，则**没有第三个非负整数 $c$**。 保证 $1≤T≤1000,b∈{0,1,2}$。 保证 $a$ 所表示的日期一定合法。当 $c$ 表示日期时，保证 $c$ 晚于 $a$，但不保证 $c$ 表示的日期一定合法。 当 $c$ 表示该 ddl 距离当前日期有多少天时，保证 $c$ 在 int 非负范围内。 对于题目中涉及到的所有的日期，均保证不早于 1600 年 1 月 1 日，不晚于 9999 年 12 月 31 日。 输出对于每组数据，输出一行数据，按照如下格式。 对于输入的 $b$： 若 $b$ 为 0，则输出该 ddl 的正确日期，格式为 YYYY-MM-DD。 若 $b$ 为 1，则对该 ddl 的日期进行判断。 若输入的日期 $c$ 不合法，则输出 WR0NG DATE!!!。 若输入的日期 $c$ 合法，则输出一个整数 $d$，表示该 ddl 距离当前日期有多少天。 若 $b$ 为 2，则输出 qwq。 输入样例1123456520240919 0 1020240818 1 2024091920240717 220240616 1 2025022920240515 0 365 输出样例1123452024-09-2932qwqWR0NG DATE!!!2025-05-15 样例解释与提示输入共 5 组数据。 第一组数据，自 2024 年 9 月 19 日，10 天后的日期为 2024 年 9 月 29 日。 第二组数据，自 2024 年 8 月 18 日至 2024 年 9 月 19 日，距离有 32 天。 第三组数据，输入的 $b$ 为 2，输出 qwq。 第四组数据，因为 2025 年 2 月 29 日不是一个合法日期，所以输出 WR0NG DATE!!!。注意是 WR0NG 不是 WRONG。 第五组数据，自 2024 年 5 月 15 日，365 天后的日期为 2025 年 5 月 15 日。 THINK 该程序实质就是日期判断和加减，但是我就算是复用年月正确性判断代码和调用 Unix 时间戳来计算日期差也过不了，没明白它的关键点在什么地方…… BF 蟹堡王的迷宫时间限制：1000ms 内存限制：65536kb 通过率：196&#x2F;335 (58.51%) 正确率：196&#x2F;3842 (5.10%) 题目描述蟹老板要出差了，但他到达机场时突然发现忘了带钱包，只好安排海绵宝宝去蟹堡王帮他拿回来，接下来请你通过输出 W&#x2F;&#x2F;S&#x2F;&#x2F;A&#x2F;&#x2F;D ，控制海绵宝宝 上&#x2F;&#x2F;下&#x2F;&#x2F;左&#x2F;&#x2F;右 移动，勇闯蟹堡王迷宫，取出蟹老板的钱包。 注意 “取出”，也就是说既要取到钱包，又要离开蟹堡王。 输入好像没有输入~（迷宫怎么会在输入里，当然是在蟹堡王了！） 输出一行字符串，为你控制海绵宝宝移动的指令（真的只有这些了吗？），长度不超过 $107$。 输出样例1DWWDDA HINT 1 # 表示墙壁 $ 表示蟹老板的钱包 @ 表示海绵宝宝 ? 表示待探索的未知区域 HINT 2如果实在不知道怎么办就先输出样例试试叭~ 还记得助教们教过的怎么 在 “我的提交” 里查看具体评测信息 吗？如果你觉得评测信息太乱，右键点击 你的评测信息然后 检查 就能看到原貌啦~ 本题改编自 20242024 年洛谷愚人节比赛 E 题。 THINK 题目的确很新颖，刚开始没看懂，因为没有开 dev 窗口查看html源码——败 诚如 $\\text{HINT}$所说，先看原题，多查找资料，一步一步来应该是能解决的 BG 阻止 sigmoid114！时间限制：1000ms 内存限制：65536kb 通过率：8&#x2F;31 (25.81%) 正确率：8&#x2F;73 (10.96%) 题目描述什么，sigmoid114 要去开启疯狂做题模式了吗？不，你必须要阻止他。 现在你召集了 $n$ 名同学，每名同学都有一个属性值，你可以让他们按照你需要的某种顺序站在 sigmoid114 面前的 $n$ 个位置，从而起到阻挡作用。假设第 $i$ 个位置同学的属性值为 $a_i$ 。 每个位置都会产生一个阻力，第 $i$ 个位置的阻力 $f(i)$ 由前 $i$ 个位置的同学决定，大小为 $f(i)&#x3D;gcd(a1,a2,…,ai)$，也就是前 $i$ 名同学属性值的最大公因数，特别地，$f(1)&#x3D;a_1$。 那么 sigmoid114 受到的总阻力为：$$F&#x3D;\\sum_{i&#x3D;1}^n f(i)$$你需要确定某种顺序从而最大化 $F$ ，请你求出这个最大值。 快来个人阻止 sigmoid114 啊！ 输入第一行一个不超过 $10^6$ 的正整数 $n$。 第二行 $n$ 个不超过 $10^6$ 的正整数，分别表示 $n$ 名同学的属性值。 输出一个数 $F$ 。 输入样例 11232 4 2 输出样例 118 输入样例 21261 1 4 5 1 4 输出样例 2112 样例解释样例 1 可以重排为 $4,2,2$ ，此时 $f(1)&#x3D;4,f(2)&#x3D;\\gcd(4,2)&#x3D;2,f(3)&#x3D;\\gcd(4,2,2)&#x3D;2$ ，故阻力为 $F&#x3D;4+2+2&#x3D;8$ ，并且没有别的排列方式比这个更大。 Author: sigmoid114 Think 没有思路的一集","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary3","slug":"Summary3","date":"2024-10-09T10:47:39.000Z","updated":"2024-10-09T11:00:47.709Z","comments":true,"path":"2024/10/09/Summary3/","permalink":"http://example.com/2024/10/09/Summary3/","excerpt":"$U\\sim Z$","text":"$U\\sim Z$ U 国庆-朝日的括号序列时间限制：1000ms 内存限制：65536kb 通过率：40&#x2F;91 (43.96%) 正确率：40&#x2F;298 (13.42%) 题目描述Asahi 在你的电脑键盘上按了若干次 ( 和 ) ，在屏幕上打出了一段括号序列。 众所周知，按下 ( 和 ) 时，电脑会根据光标 | 的位置生成括号。光标的移动只能通过按 ( 和 ) 实现。具体规则如下： 按下 ( 时，光标 | 的左侧和右侧会各自添加一个 ( 和 ) 。举个例子，屏幕上显示 (|) 时按下 ( ，屏幕会显示 ((|)) 。 按下 ) 时，有两种情况： 屏幕上光标 | 的右侧是 ) 时，光标向右移动一格。如显示(|) 时按下 ) ，屏幕会显示 ()| 。 屏幕上光标 | 的右侧是 ( 或空白时，会在光标左侧添加一个 ) 。如显示()| 时按下 ) ，屏幕会显示 ())| 。 Asahi 输入括号序列后，打印下来后交给了你，然后就去河边捡石头了。注意打印后的括号序列是没有光标 | 的。你很好奇 Asahi 是怎么打出来的。请你给出一个程序，找出 Asahi 可能的最短输入序列。 输入一行，一个仅包含 ( 和 ) 的字符串 $S$ ，表示 Asahi 给你的括号序列。$(1≤|S|≤10^6)$ 输出一行，符合要求的最短输入序列 TT ；若不存在则输出 Asahi?? 。 输入样例（1）1((())) 输出样例（1）1((( 输入样例（2）1( 输出样例（2）1Asahi?? 输入样例（3）1)))() 输出样例（3）1)))( 样例解释样例（1）的输入序列也可以为 ((() 、 ((()) 、((())) 等等，都符合条件，最短的是 ((( 。 author:Layn 这题自己打几个样例来就比较清晰了，主要是理解题意和分析所有可能的情况,需要注意的就是 左括号一定会有有括号匹配 右端若有未能匹配的右括号，左侧的所有括号一定会被敲出来， 光标移动只能通过敲括号 V 查重红线 !时间限制：1000ms 内存限制：65536kb 通过率：32&#x2F;88 (36.36%) 正确率：32&#x2F;936 (3.42%) 题目背景⌈⌈ 御坂美琴 ⌋⌋ 正在学习 C 语言，她实在想不到这些题应该怎么写，于是她通过意念获取到了 ⌈⌈ 初春饰利 ⌋⌋ 一份已经 $\\text{AC}$ 了的代码，但一想到有被查重的风险，她决定修改一下再提交上去。 这份代码一共有 $n$ 个语句，查重红线是 $m$ 个语句，也就是如果她提交的代码与 ⌈⌈ 初春饰利 ⌋⌋ 的代码有 $x$ 个语句不同，当 $x\\le m$ 的时候会触发 1 次预警。 $x&#x3D;0$ 的时候一定会触发预警，$x&gt;n$ 的时候一定不会触发预警。 预警次数达到 $3$ 次就算作抄袭，成绩清零！ 如果提交次数超过 $[\\sqrt{2n}]$，就会被助教注意到并人工查重，同样会被发现抄袭，成绩清零！（其中 $[\\ ]$ 表示四舍五入取整） 现在她想要通过多次试探性提交的方式，在成绩不被清零的前提下，猜出 $m$ 的值究竟是多少，你能帮帮她嘛？ 题目描述我们已经帮你实现好了两个函数 submit(x) 和 guess(x)，请你利用这两个函数帮她猜出 $m$ 的值。如果在 成绩不被清零 的前提下猜对了，你就能够 AC 本题，否则不能。 submit(x) 表示你提交了一份有 x 个语句不同的代码，可以调用不超过 $[\\sqrt{2n}]$ 次。其返回值为本次提交的查重结果。 guess(x) 表示你最终猜测 $m$ 的值为 x，只能调用 $1$ 次，调用后我们会立即结束你的程序并判断是否猜测正确。这个函数没有返回值。 这两个函数的参数 $x$ 必须是一个 int 型变量，变量名不必为 $x$。 submit(x) 的返回值是 int 类型，其返回值含义如下： 返回值 含义 1 本次提交触发了预警 0 本次提交未触发预警 -1 成绩被清零（预警次数达到了 3 次，或提交次数超过了$\\sqrt{2n}$） NOT HINT请务必在你的程序最前面完整地加入以下两行代码（这是两个函数的实现，但你不必关心具体是如何实现的，更不要试图改动，以免发生意外错误~） 12#define submit(x) (printf(&quot;%d\\n&quot;,x),fflush(stdout),scanf(&quot; &quot;),(int)(getchar()-&#x27;0&#x27;))#define guess(x) return (printf(&quot;m=%d\\n&quot;,x),fflush(stdout)) 输入1 个正整数 $n$，保证 $3≤n≤10000$。 输出无 输入样例1100 submit(x) 返回值样例1234500001 样例解释123456789101112131415161718#define submit(x) (printf(&quot;%d\\n&quot;,x),fflush(stdout),scanf(&quot; &quot;),(int)(getchar()-&#x27;0&#x27;))#define guess(x) return (printf(&quot;m=%d\\n&quot;,x),fflush(stdout)) #include&lt;stdio.h&gt; int main() &#123; int n; scanf(&quot;%d&quot;, &amp;n); //第一步先读入 n for(int i = n; i &gt;= 0; i--) &#123; int jud = submit(i); // jud 中获得了这次提交是否预警的反馈 if(jud == 1) &#123; guess(i); //猜测最终结果为当前的 i &#125; &#125; return 0; //这行可以省略，因为 guess(i) 自带 return&#125; 返回值样例或许可以来源于这个程序，这里每次 submit(i) 对应的不同语句数（i 的值）分别为 $100,99,98,97,96$，反馈依次为 $0,0,0,0,1$，说明查重红线 $m&#x3D;96$。 但这是一个只能通过样例的示例，用来演示这个程序的结构。 如果 $n&#x3D;100,m&#x3D;1$ 那么这个示例程序显然因为提交次数过多就不能 AC 了！ 此题需要格外注意限制条件，预警3次即清0，考虑到最后一定会经过从右往左扫描试出第一个预警值m，所以在此之前的阶段必须限制只能试错一次（现实是人生试错的次数太少了，故三思而后行）。相当于逐步缩小m所在的区间。一个可行的方法是从右往左扫描，但是提交次数是有限制的，如果m比较小，在试出答案前提交次数就已经消耗完了。所以应该采用“线性探测”方法，每次探测一段，逐步缩小范围——需要注意的是每探测一次会消耗一次提交次数，为保证每一个可能的区间能够被检测，因此，第$i$次探测的长度为$k-i,(k&#x3D;\\sqrt{2n})$,求和会发现$\\sum_{i&#x3D;1}^{i&#x3D;k-1}(k-i)&#x3D;k(k-1)&#x2F;2&#x3D;n-\\frac{\\sqrt{2n}}{2}$,理论上是不可能将整个区间给探测完的，所以这里 $hack$ 一下，面向结果编程，10个测试点不可能完全覆盖，多试探几次，在中间的空白段直接跳过就能过 这题刚开始没明白，自己计算的时候只是算了个大概的，但是这样没有严谨的证明反而会增加思维的负担，前面有好多次都试错 W 见证奇迹的时刻 ！时间限制：1000ms 内存限制：65536kb 通过率：2&#x2F;49 (4.08%) 正确率：2&#x2F;115 (1.74%) 题目背景相信大家都看了今年央视春晚的魔术，其本质是一个约瑟夫环问题，魔术流程如下： 将 $N$ 张牌对半撕开，一半整体放到另一半下面。 将第一张牌放到最后，重复次数 &#x3D;&#x3D; 自己名字字数。 将前 $N−1$ 张牌插到中间，然后将第一张牌藏起来。 根据南北，将最前 1 或 2 或 3 张牌插到中间。 男生扔掉第 1 张牌，女生扔掉前 2 张牌。 将第一张牌放到最后，重复 $Q$ 次。 将当前第 1 张牌放到最后，再将此后第 1 张牌扔掉…… 重复此过程直到只剩一张牌。 最后剩的牌与藏起来的牌刚好能匹配，魔术成功。 题目描述原魔术中 $N&#x3D;4, Q&#x3D;7$；当 $N&gt;4$ 时，$Q$ 为能保证男女生在操作无误时都成功的最小值。 主持人在 第 4 步 中不小心把一张牌插到了最后，导致原来的最后 1 张牌变为了倒数第 2 张牌。不过或许他自己悄悄将 第 5 步 操作改为一次性扔掉前 $M$ 张，就依然有成功的可能。 现给出一个 $N$，请问是否存在一个满足下列条件的正整数 $M$，使得当 第 6,7 步 不再出错时，最终能成功匹配？ $$⌊\\frac{Q}{2 N−M−1}⌋≤\\frac{2^{⌊\\log _2Q⌋}}{2^{⌊\\log _2(2N−M−1)⌋}}+2$$ 其中，$⌊X⌋$ 表示对 $X$ 向下取整。 输入不定组输入，不超过 1000 组；每组 1 行，若干个整数。 每行第一个整数为 $t$，后面 $t$ 个整数，依次为 $a_1,a_2,a_3,…,a_t$，用来表示这一组数据的 $N$。$a_i$ 表示 $N$ 在二进制下从低位向高位数第 $i$ 个 1 出现在第 $a_i$ 位（最低位是第 0 位）。 保证 $4≤N≤2^{10^8}，1≤t≤1000$。 输出每组 1 行。 若存在相应的 $M$，输出 YES。 若不存在相应的 $M$，输出 NO。 输入样例122 2 04 3 2 1 0 输出样例12NOYES 样例解释第 $1$ 组数据中 $N&#x3D;5$，此时不存在 $M$。 第 $2$ 组数据中 $N&#x3D;15$，此时存在 $M&#x3D;24$。 HINT不难发现：$Q&#x3D;2^y−1 , 2^{y−1}&lt;2N−2≤2^y$ 这是迷宫密码，本题不必理会：MSJ 这题觉得太长，连题都没有读完。但是经过这次练习，看到题目限制这么大的数据量，说明一定有常数时间的判断方法，否则就不能被解决，只不过是没明白罢了 X 国庆-Xhesica的集合时间限制：1000ms 内存限制：65536kb 通过率：62&#x2F;87 (71.26%) 正确率：62&#x2F;162 (38.27%) 题目描述 Xhesica有一个集合 $S$ 用于存放一些正整数,一开始，$S$ 为空集 ，他首先将所有的位于 $l$ 和 $r$ 之间的整数插入集合 $S$ ,即满足当且仅当整数 $x$ 满足 $l≤x≤r$ 时，整数 $x$ 会被加入于集合中。随后, Xhesica 允许你进行接下来的操作: 选择仍然存在于集合中的三个不同的整数 $a,b,c$，满足 $\\gcd(a,b)&#x3D;\\gcd(a,c)&#x3D;\\gcd(b,c)&#x3D;1$，之后将这三个整数从集合中删去。 理论上最多能进行多少次操作呢? 注意，$\\gcd(a,b)$指的是 $a$ 和 $b$ 的最大公因数。 输入 本题目包括多个测试用例，测试用例之间互相独立。 第一行仅有一个正整数 $t$,满足 $1≤t≤500$ ,表示测试用例的数量 接下来有 $t$ 行，每行表示一个测试用例，每行包括两个正整数 $l,r$ 满足 $1≤l≤r≤108$，表示含义同题目描述。 输出 对于每一个测试用例，输出一行，仅包括一个整数，表示本测试用例下你能进行的最多的操作次数。 输入样例12345678981 33 710 212 851 602 1510 261 1000 输出样例123456781131234250 样例解释 对于测试用例 1，可以选择 $a&#x3D;1，b&#x3D;2，c&#x3D;3$，之后集合变为空集，无法进行更多的操作。 对于测试用例 2, 可以选择 $a&#x3D;3，b&#x3D;5，c&#x3D;7$ ,之后集合中仅剩下 $4,6$，无法进行更多的操作。 这题明确目标是使得在区间$[l,r]$中的操作$F(a,b,c)&#x3D;{a,b,c\\in [l,r],\\and\\gcd(a,b)&#x3D;\\gcd(b,c)&#x3D;\\gcd(c,a)}$的次数最大化，$a,b,c$需要满足的条件就是三个数的最大公因数为1，其实简单写一写，就可以知道$\\text{if}\\ k\\mod 2&#x3D;&#x3D;0,\\Rightarrow\\ \\gcd(k-1,k)&#x3D;\\gcd(k,k+1)&#x3D;\\gcd(k+1,k-1)&#x3D;1$而且这样使得$a,b,c$三个数尽量的接近，使得能进行的操作次数达到最大化。如果这样连续分组，中间会空出一个偶数来，因此周期是4.需要注意的是考虑区间$[l,r]$的边界条件，合理的情况是按l和r的奇偶性分4种情况讨论 Y 摩卡与数学家水獭时间限制：1000ms 内存限制：65536kb 通过率：122&#x2F;176 (69.32%) 正确率：122&#x2F;501 (24.35%) 题目描述$\\text{Moca}$ 非常喜欢水獭，一天，她遇到了一只被难题困扰着的数学家水獭。 对于一个给定的正整数，显然可以把它分解为若干质数的和。数学家水獭想知道，对一个给定的正整数，把它分解为若干质数（可以重复）需要的质数个数最少是多少。 由于这个问题太难了，数学家水獭希望 Moca 编程帮它得到 $5×106$ 以内的结果。 输入第一行一个正整数 $n$ ，表示接下来会有 $n$ 组输入，$1≤n≤500000$ 。 接下来 $n$ 行，每行一个正整数 $k$ ，代表数学家水獭每次询问的正整数，有 $2≤k≤5×106$ 。 输出输出 $n$ 行，每行一个正整数，代表对应输入的正整数被分解的最少的质数个数。 输入样例123454391227 输出样例12341223 样例解释对于 $3$ ，质数个数最少的分解为 $3&#x3D;3$ ，只需要 $1$ 个质数。 对于 $9$ ，质数个数最少的分解为 $9&#x3D;2+7$ ，需要 $2$ 个质数。 对于 $12$ ，质数个数最少的分解为 $12&#x3D;5+7$ ，需要 $2$ 个质数。 对于 $27$ ，质数个数最少的一种分解为 $27&#x3D;3+7+17$ ，需要 $3$ 个质数。 分解质因数著名的哥德巴赫猜想，小学生都知道的陈景润证明$1+1$的情况， 果然是大数学家。Goldbach猜想，任何大于2的偶数都可以分解为两个素数相加，二任何大于2的质数则可以表示成3个质数之和 对于是奇数而非质数时，考分解为一个2和质数，其余则是根据定理[^1] 判断即可，对于素数的判断，可以进行素数测试（前面有Miller Rabin测试可以判断$2^{32}$以内的整数 zhu 数学、物理百科之根基。有复变，实变，拓扑等广阔数学分支，而计算机领域也是常常用到，益自学数学，物理，提高自己的理论分析水平 但是本题主要逻辑流是在查询素数上，而且数据范围也不大，所以使用素数表是一个明智选择。打表根据优化情况，一般是根据对称性将区间缩小为$[1, \\sqrt{n}]$ 然后使用筛素数的方法来处理，然而筛素数又有多种方法，一般有埃氏筛，但是效率较低，这里选用欧拉筛 Z 摩卡与取石子游戏时间限制：1000ms 内存限制：65536kb 通过率：91&#x2F;151 (60.26%) 正确率：91&#x2F;372 (24.46%) 题目描述在受到数学家水獭的启发后，Moca 想到了一个好玩的游戏，她决定邀请 Ran 一起玩这个游戏。 游戏规则如下：现在有 $n$ 个石子，Ran 先手，每名玩家每次可拿走质数个石子（拿走的石子不可能比剩下的石子多，也就是说此质数应该小于等于剩下的石子数），轮到一位玩家时不能不拿。将最后一个石子取走的玩家获胜；或者当某位玩家取完石子后，若场上只剩下一个石子，则对方获胜。 Moca 和 Ran 都很聪明，她们每次都会选择最优策略来进行操作。请你编写一个程序，判断出在一个给定的初始局面下两个人谁会赢。 输入第一行一个正整数 $t$ ，表示输入数据组数，其中 $1≤t≤106$。 接下来 $t$ 行每行一个正整数 $n$ ，表示初始的石子数，其中 $2≤n≤109$。 输出每组输入对应一行输出，若 Ran 获胜（先手获胜），则输出 Ran ；若 Moca 获胜（后手获胜），则输出 Moca。 输入样例12343348 输出样例123RanMocaMoca 样例解释若初始有 3 个石子，则 Ran 拿走 3 颗石子后获胜。 若初始有 4 个石子，如果 Ran 拿走 3 颗石子，则剩下 1 颗石子，根据获胜规则二，Moca 获胜；若 Ran 拿走 2 颗石子，Moca 再拿走 2 颗石子，根据获胜规则一，Moca 获胜。 若初始有 8 个石子，如果 Ran 拿走 3 颗石子，Moca 再拿走 5 颗石子，根据获胜规则一，Moca 获胜；若 Ran 拿走 5 颗石子，Moca 再拿走 3 颗石子，根据获胜规则一，Moca 获胜；若 Ran 拿走 2 颗石子，Moca 再拿走 2 颗石子，此时剩下 4 颗石子，且 Ran 先拿，根据上个样例，Moca 获胜。 Author：Moca 这种博弈问题真的不会做，在经过“猪脚”步步引导后，终于理解一点先后手的博弈状态。 整个过程可以说是行云流水，非常丝滑。首先样例是给了一些提示的，（理所当然），类比同类问题：一次可以取一个或者两个的问题，如何判断这样对局（这种题一般需要找到先手必输的条件，如果当前先手能够将当前局面转化成先手必输，则当前局面就是先手必赢。一个小提示：和余数有关。具体的策略是谁能让最后一个回合场上剩下$m+1$个谁就赢。现在推广一下，如果你能拿超过m个呢？核心策略依旧是维持$m+1$或者$m+1的倍数个$，为了维持这个状态，所以我们需要使每一个回合取得子数为m+1的倍数个（这是中间过程）。 现在考虑开始时，如果开具不是$m+1$的倍数个，先手就会让他剩$m+1$的倍数个，然后自己就可以当后手 那么对于质数来说，这个$m$是多少？也就是说，$m$取多少能保证质数里没有$m+1$的倍数，并且模$m+1$等于1到$m$的均存在 其实只有一个m能满足上述条件，$m+1&#x3D;4$ 总结：这种博弈题一般都是先看后手必胜的条件，其余情况先手只需要能转换成后手必胜的情况即可。有可能会有余数、位运算等思考角度","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary2","slug":"Summary2","date":"2024-10-09T10:45:11.000Z","updated":"2024-10-09T13:14:06.491Z","comments":true,"path":"2024/10/09/Summary2/","permalink":"http://example.com/2024/10/09/Summary2/","excerpt":"$O\\sim T$","text":"$O\\sim T$ O 更好的isprime时间限制：1500ms 内存限制：65536kb 通过率：399&#x2F;418 (95.45%) 正确率：399&#x2F;708 (56.36%) 题目描述传统的判断素数的方式都是从 2 枚举到$ ⌊\\sqrt{n}⌋$，试图寻找 $n$ 的因数，如果找不到则说明 $n$ 是素数。这种方法判断素数的时间复杂度是 $O(\\sqrt{n})$，那我们能不能做的更好呢？ Miller-Rabin 素性测试，是一种基于二次探测定理和费马小定理的，用于快速测试一个奇数是否是素数的方法，对 $n$ 进行一次 Miller-Rabin 素性测试的时间复杂度仅为 $O(\\log n)$。通过素性测试的数不一定是素数，可是没通过素性测试的数一定不是素数。用不同的数作为基底对 $n$ 进行多次素性测试，可以使得通过了这些素性测试的 $n$ 是素数的概率尽可能大。 不过对于范围 $[1,2^{32})$ 的数字，只要它能分别通过 $2,7,61$ 这三个数为基底的 Miller-Rabin 素性测试，它就一定是素数。 下面给出进行 Miller-Rabin 素性测试的代码，请你调用 Miller-Rabin 素性测试函数实现一个更好的 isprime 函数，并调用 isprime 函数完成本题要求。 1234567891011121314151617181920212223242526272829303132333435363738394041424344int qpow(int a, long long n, int mod) // 这只是一个快速幂，你可以不用管它&#123; int ans = 1; int base = a; while (n &gt; 0) &#123; if (n &amp; 1) &#123; ans = ans * (long long)base % mod; &#125; base = (long long)base * base % mod; n &gt;&gt;= 1; &#125; return ans;&#125;/* 如果通过素性测试，那么下面这个函数返回1，否则返回0 */int Miller_Rabin_check(int a, int n) // a是基底，n是你拿来进行素性测试的数&#123; int u = n - 1; while (u % 2 == 0) &#123; u /= 2; &#125; int v = qpow(a, u, n); if (v == 1) return 1; while (u &lt;= n - 1) &#123; if (v == n - 1) return 1; if (v == 1) return 0; v = 1ll * v * v % n; u *= 2; &#125; return 0;&#125;int isprime(int n)&#123; if (n == 2 || n == 7 || n == 61) // 作为基底的这三个数需要特殊处理 return 1; /* 补全你的代码 */&#125; 输入第一行一个正整数 t 表示数据组数，$1\\le t\\le 3\\times 10^5$。 接下来 $t$ 行，每行一个正整数 $n$，$2\\le n\\le 10^9$。 输出对于每组数据，如果 $n$ 是素数，输出 Yes，否则输出 No。 输入样例123456762614711451919810998244353 输出样例123456YesYesYesNoNoYes Not Hint如果你实在很闲可以看看原理 思路 没有思路，直接用and逻辑检测。唯一需要的是把代码框架写好：输入 --> 处理 --> 输出 P 解数织科学时间限制：3000ms 内存限制：65536kb 通过率：7&#x2F;20 (35.00%) 正确率：7&#x2F;76 (9.21%) 题目描述某咸鱼同学希望用若干数字描述行和列的涂色情况，如下图所示： 对于第一行，1 1表示有 $2$ 个长度为 $1$ 的 1（涂色）序列；对于第二列，4表示有 $1$ 个长度为 $4$ 的 1 （涂色）序列。 特别的，如果某行或某列没有一个涂色方块，我们用一个 0 表示。 请你根据给出的行列的情况，输出涂出颜色的地图。 输入共 $2n+1$ 行。 第一行为一个正整数 $n$ 。 接下来 $n$ 行，输入从第一行到最后一行的情况，详见题目描述。 再接下来 $n$ 行，输入从第一列到最后一列的情况，详见题目描述。 保证 $n≤15$ ，且一定有解。 输出$n$ 行，每行 $n$ 个字符（字符仅为 0 或 1），表示涂色后的地图。 本题采用 $\\text{Special Judge}$ ，对于有多解的情况，请仅输出其中一种。 输入样例123456789101151 12 23222 24122 输出样例123451000111011011101100011000 Thinking 上网搜一下可以知道这还是一个比较要动脑的游戏，起源于国外，也可以搜到一些程序化解法——但是基本不可用，毕竟你从这些人写的博客就知道不仅技术水平低，同时文化水平也高不到哪里去。唯一比较好的一篇中文是数织游戏中的程序思维和数织的程序解法-CSDN博客，其中比较有趣的是对于数据结构状态的定义和一些个定理： 网格每一格拥有三种状态 定义连续空白条 定义一个表示函数 定理，平行传递性，交换不变形 …… 总的来说就是对现实问题进行数学抽象，建模简化，并进行程序化流程设计……当然，一般解决问题都是这样嘛。不过在思路受阻时宏观的考量的确能给人一些顿悟 还有一点就是，这个博客可能并不是原版，更多还待发掘。英文就有很多信息了[Solving Nonograms — Nonogram Solver (stevocity.me.uk)](https://stevocity.me.uk/nonogram/solve#:~:text=How to solve Nonograms yourself Before attempting to solve a) 数织 - 在线解谜游戏 (puzzle-nonograms.com) 原本自己想的是先确定行的数量，然后根据列的数量进行dfs暴力搜索——及时剪枝 Q 逞强好胜的 Yanami ！时间限制：300ms 内存限制：65536kb 通过率：100&#x2F;188 (53.19%) 正确率：100&#x2F;721 (13.87%) 题目描述$\\text{Yanami}$ 想变得和 $\\text{Alice}$ 一样强 但是现在她还无法做到，她只能研究 $\\text{Alice}$ 留下的世纪难题 $\\text{Alice}$ 给 $\\text{Yanami}$ 留下了一个 “异或三角形” 一个 $n$ 层的异或三角形有以下特征： 第 1 层有 1 个整数，第 2 层有 2 个整数，⋯⋯ ，第 $n$ 层有 $n$ 个整数 如果用 $a(i,j)$ 表示异或三角形第 $i$ 层从左往右数的第 $j$ 个数 $(1≤j≤i) $，那么对于$ ∀1≤i≤n−1,1≤j≤i$，有 $a(i,j)&#x3D;a(i+1,j)⊕a(i+1,j+1)$ ，即异或三角形中的每一个数等于其正下方相邻两个数的异或和 下方就是一个 $5$ 层的“异或三角形”： 123454 4 02 6 6 3 1 7 11 2 3 4 5 对于第 4 层，从左往右有$$a(4,1)&#x3D;a(5,1)⊕a(5,2)&#x3D;1⊕2&#x3D;3\\ a(4,2)&#x3D;a(5,2)⊕a(5,3)&#x3D;2⊕3&#x3D;1\\ a(4,3)&#x3D;a(5,3)⊕a(5,4)&#x3D;3⊕4&#x3D;7\\ a(4,4)&#x3D;a(5,4)⊕a(5,5)&#x3D;4⊕5&#x3D;1$$ 其他层类似 可以发现，只要确定了最底层的 $n$ 个数字，就可以推导出整个“异或三角形” 不幸的是，$\\text{Alice}$ 给 $\\text{Yanami}$ 留下的“异或三角形”，恰好只剩下最底层的 $n$ 个数字，其他数字都不见了 现在， $\\text{Yanami}$ 想要知道“异或三角形”最顶层的那一个数字是什么，你能帮帮她吗？ 输入输入包括两行 第一行包括一个整数 $n$ ，表示“异或三角形”的层数 第二行包括 $n$ 个整数$ x_1,x_2,⋯,x_n$ ，表示“异或三角形”最底层的 $n$ 个数 输出输出包括一行 第一行包括一个数，表示“异或三角形”最顶端的数值 输入样例 111251 2 3 4 5 输出样例 1114 输入样例 221241 1 4 5 输出样例 2211 样例解释样例 2 的“异或三角形”如下： 1234 1 5 4 0 5 11 1 4 5 故答案为 1 数据范围 对于 $35%$ 的数据，$1≤n≤10^3$ 对于 $100%$ 的数据，$1≤n≤10^5,0≤x_i≤10^9$ 题目背景 没错！ 一次又一次地 屡败屡战！ 是眼泪教会我坚强 我相信 总有一天 总有一天 会迎来美满结局 开始转动吧！无与伦比的命运 ——《逞强好胜的女孩》 思路 这道题在数量比较小的时候规律还是非常好找的，可以省略中间众多的异或过程，直接计算出需要哪些元素作异或操作就可以。具体方法是从1开始右移一格得到新向量，与原先向量作异或和，n次迭代后得到为1的分量即为需要做异或和操作的元素，否则舍弃。因为计算机中是二进制，所以可以根据二进制表示的周期性来对迭代过程进行加速。但是这题尝试好久都没有得到有效解决，可能是规律找错了。 大概有100人通过了，心理挺着急的，为什么别人都会，就我不会？想不出来，前后浪费半天——悲 R 摩卡与主唱时间限制：1000ms 内存限制：65536kb 通过率：107&#x2F;193 (55.44%) 正确率：107&#x2F;742 (14.42%) 题目描述作为乐队的主唱，Ykn 和 Ran 对音乐有着不同的理解。 Ykn 在听一首音乐时，会格外关注音乐中高音转低音的部分；Ran 在听一首音乐时，会格外关注音乐中低音转高音的部分。在听完一次演唱会后，二人对其中的一首曲子格外感兴趣，经过讨论后，二人发现这首曲子所有音符只由高音和低音组成，且其中的高音转低音次数和低音转高音次数是完全相同的。但是二人只能回忆起其中的部分音符。 为了能还原这首曲子，Ykn 和 Ran 找到了会编程的 Moca。 输入第一行一个正整数 $n$ ，表示曲子音符的个数，$1≤n≤100000$ 。 第二行 $n$ 个字符，表示 $n$ 个音符，每个音符只有 $1\\ 0\\ ?$ 三种可能的输入，分别表示这个音符是高音音符，低音音符以及回忆不起来的音符。 输出输出 1 行，代表原曲有多少种可能（由于两个人的记忆可能存在偏差，所以结果为 0 也是有可能的），由于结果可能很大，你需要将正确的答案对 $10^9+7$ 取模后输出。 输入样例1251?001 输出样例12 THINK 无 样例解释若想符合条件，原曲有 $11001$ 和 $10001$ 两种可能。 Author：Moca 该题也是，别人都会，为什么就我不会——懊恼。 应该是一个能在线性时间处理的问题，不然不会有这种数据。所以，处理的时候应该只需要考虑局部就行，最后验证可行性 Moca是种$Italian$浓缩咖啡:coffee:,还有拿铁，记得大川课上还让我们每次做咖啡给他品，居然把这个忘了…… S 哈希攻击时间限制：2000ms 内存限制：65536kb 通过率：18&#x2F;42 (42.86%) 正确率：18&#x2F;147 (12.24%) 题目描述字符串以某种方式映射到整数上的过程，称作「字符串哈希」。由这个字符串经过哈希得到的整数，我们称其为字符串的「哈希值」。以下是一种比较常用的字符串哈希公式： $f(s)&#x3D;(∑_{i&#x3D;1}^n a_i×b^n−i)\\mod p$ 其中，$a_i$ 是字符串第 $i$ 位对应字符所需要映射的值，$b$ 是小于 $p$ 的正整数，$p$ 是一个大质数。 当两个字符串完全相同时，它们的哈希值也必定完全相同。可是反之，当两个字符串的哈希值完全相同时，它们本身并不一定会完全相同。因为哈希函数最终对 $p$ 取模的操作，使得无穷无尽的字符串最终只能被映射到 $0∼p−1$ 的正整数上，而这就必定要产生多个不同字符串拥有同一哈希值的情况。这种两个不同的字符串具有相同的哈希值的情况，我们称其为「哈希冲突」 可是 Gino 并不害怕。他使用如下函数对字符串进行哈希，并且认为你无论如何也无法在短时间内产生无穷多的字符串，并从无穷多的字符串中找到哈希冲突的情况。 123456789int strhash(char s[], int len, int b, int p)&#123; int val = 0; for (int i = 0; i &lt; len; i++) &#123; val = (1ll * val * b + s[i] - &#x27;a&#x27; + 1) % p; &#125; return val;&#125; 请你找到任意两个字符串，使它们满足以下条件： 仅由小写字母 a-z 组成 两者长度相同，且长度 $n$ 满足 $1≤n≤104$ 两者不完全相同，却在给定 $b,p$ 的条件下有着一致的哈希值 输入两个由空格隔开的正整数 $b,p$，含义与题意相同。 对于 10%的数据，31≤b&lt;p≤1009 对于 30% 的数据，31≤b&lt;p≤1000033 对于 100% 的数据，31≤b&lt;p≤1000000007 所有数据均保证 p 是一个质数。 输出两行，分别输出你找到的两个字符串，需要满足题目给出的条件。满足条件的字符串有很多组，你只需要输出任意一组即可。 输入样例1131 1033 输出样例（答案不唯一）12vdaciu 样例解释对于字符串 vdl，其哈希值为 $(22×1312+4×1311+1×1310)\\mod 1033&#x3D;378067\\mod 1033&#x3D;1022$ 对于字符串 ciu，其哈希值为 $(3×1312+9×1311+10×1310)\\mod 1033&#x3D;52672\\mod 1033&#x3D;1022$ 两个不同的字符串却有着同样的哈希值，因此这组输出是正确的。 注意你的输出不必和输出样例相同，只需满足题目条件即可。 $HASHHACKER$: THINK 有点思路。解法一定跟生日问题有关。 可以思考这个哈希函数的计算式，二者相减可以得到一个多项式，而系数正好就是一个$b$ 进制数，但是要求是 ASCll 码中的小写字符，所以需要转化成一个系数相差不超过26的$b$进制 问题成功转化 T 多重哈希攻击时间限制：2000ms 内存限制：65536kb 通过率：11&#x2F;22 (50.00%) 正确率：11&#x2F;114 (9.65%) 本题是题目《哈希攻击》的困难版本。 题目描述在 $\\mathscr{HASHHACKER}$ 的攻击下，Gino 自认为没有破绽的字符串哈希被攻破了！可是 Gino 并不打算放弃。于是，他找到了一种叫「多重哈希」的技术。 我们知道，字符串可以通过以下方式映射到一个整数上：$$f(s)&#x3D;(∑_{i&#x3D;1}^n a_i×b^n−i)\\mod p$$其中，$a_i$ 是字符串第 $i$ 位对应字符所需要映射的值，$b$ 是小于 $p$ 的正整数，$p$ 是一个大质数。 而「多重哈希」，会使用两组及以上的 $b,p$ 将字符串同时映射到两个及以上的整数上，以大大降低哈希冲突的概率。 Gino 使用的哈希函数与之前一样： 123456789int strhash(char s[], int len, int b, int p)&#123; int val = 0; for (int i = 0; i &lt; len; i++) &#123; val = (1ll * val * b + s[i] - &#x27;a&#x27; + 1) % p; &#125; return val;&#125; 不同的是，他这次决定使用两组不相同的 $b,p$ 进行哈希。 请你找到任意两个字符串，使它们满足以下条件： 仅由小写字母 a-z 组成 两者长度相同，且长度 n 满足 $1≤n≤104$ 两者不完全相同，却在给定的两组 $b,p$ 的条件下都有着一致的哈希值 输入共两行，每行两个由空格隔开的正整数 b,p，含义与题意相同。 对于 $30%$ 的数据，$31≤b&lt;p≤33331$ 对于 $100%$ 的数据，$31≤b&lt;p≤1000000007$ 所有数据均保证 $p$ 是一个质数。 所有数据均保证 $b_1≠b_2$ 与 $p_1≠p_2$ 至少有一个成立 输出两行，分别输出你找到的两个字符串，需要满足题目给出的条件。满足条件的字符串有很多组，你只需要输出任意一组即可。 输入样例1231 1009114 1033 输出样例（答案不唯一）12rkfmftoxsjtoxsjrkfmfrkfmftoxsjrkfmfrkfmfrkfmftoxsjtoxsjtoxsjtoxsjtoxsjrkfmftoxsjrkfmftoxsjrkfmfrkfmf 样例解释$b&#x3D;31,p&#x3D;1009$ 的情况下，两字符串的哈希值都为 $0$。 $b&#x3D;114,p&#x3D;1033$ 的情况下，两字符串的哈希值都为 $1$。 Hint为了降低思考难度，本题的输出样例极其富有启发性。 对于随机数生成函数 rand 来说，请注意，它的随机性有可能在你的本地运行环境下的表现并不好。 在出题者的本地环境下，RAND_MAX:$ 32767$，即 $2^{15}-1$ 二进制表示下，生成的随机数的最低位的循环节：$2^{17}$ 二进制表示下，生成的随机数的次低位的循环节：$2^{18}$ 二进制表示下，生成的随机数的第三低位的循环节：$2^{19}$ 也许可以解答你在本地调试时遇到的 “灵异事件”。 注 这题真是不会了，毕竟和密码相关邻域很紧密。之前学CTF的时候连进门都算不上，这里看不懂也难怪 同样是哈希攻击，但是最近 bing 的搜索结果却不太好，浏览器还是要学一学搜索语法才行。而且对于专业邻域的知识，当然是要到专家数据库中搜索，而不是在一般互联网的垃圾堆中浪费时间和生命","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary1","slug":"Summary1","date":"2024-10-09T10:42:51.000Z","updated":"2024-10-09T13:08:20.362Z","comments":true,"path":"2024/10/09/Summary1/","permalink":"http://example.com/2024/10/09/Summary1/","excerpt":"$H\\sim N$","text":"$H\\sim N$ H 吉他与孤独与蓝色星球！时间限制：500ms 内存限制：65536kb 通过率：241&#x2F;497 (48.49%) 正确率：241&#x2F;1899 (12.69%) 题目描述长大以后，$\\text{Hitori}$ 成为了远近闻名的社交达人！ $\\text{Hitori}$ 一共交到了 $m$ 个朋友，每个朋友都有一种独一无二的颜色。为了方便，我们用数字来表示每位朋友的颜色，即：第 $i$ 位朋友的颜色为 $i$ 。 这一天，$\\text{Hitori}$ 又在坐地铁。她发现线路图上从左到右一共有 $n$ 个换乘站，第 $i$ 个换乘站对应的线路颜色为 $a_i$$a_i$ ，并且 $1≤a_i≤m$ 。对于这样一个由颜色构成的序列， $\\text{Hitori}$ 将其称为整数序列 $a$ 。 $\\text{Hitori}$ 想起了她的 $m$ 个朋友，她想知道，在序列 $a$ 中，有多少个长度为 $m$ 的子段，满足在子段中，每位朋友的颜色都恰好只出现了一次。 说明： 一个序列是 $a$ 的子段，当且仅当该序列由若干个 $a$ 中连续的元素按顺序组成。如，$[1,2,3]$ 和$ [3,3,5]$ 是 $[1,2,3,3,5]$ 的子段，但 $[1,3,5]$ 和 $ [1,3,2]$ 不是。 输入输入包含两行。 第一行包含两个整数 $n,m$ ，分别表示序列 $a$ 的长度和 $\\text{Hitori}$ 朋友的数量。 第二行包含 $n$ 个整数 $a_1,a_2,a_3,⋯,a_n (1≤a_i≤m)$，表示颜色序列 $a$ 。 输出输出一行，包括一个整数，表示满足要求的子段数量。 输入样例 1125 33 2 1 3 1 输出样例 112 输入样例 2125 43 2 1 4 3 输出样例 212 输入样例 3122 33 1 输出样例 310 样例解释在样例 $1$ 中，长度为 $3$ 的子段有 3 个，分别是 $[3,2,1],[2,1,3],[1,3,1]$ 。 其中 $[3,2,1],[2,1,3]$ 满足 $3$ 种颜色都恰好出现了一次。 $[1,3,1]$ 中，$2$ 没有出现，$1$ 出现了两次，不符合条件。 故答案为 $2$ 。 数据范围 对于 $88%$ 的数据，满足 $1≤n,m≤5000$ 对于 $100%$ 的数据，满足 $1≤n,m≤10^6$ 题目背景 在北京地铁 88 号线上，$\\text{Hitori}$ 发现线路图上 $14$ 号线、$7$ 号线、$2$ 号线和 $1$ 号线的颜色依次是粉色、黄色、蓝色、红色，正好对应了她和她的三个朋友。 只不过为什么粉色要离得比较远呢？ $Hitori$ 不由得唱起了： 愚昧无知的我唯有放声高歌 倾诉一切吧 对那星辰 ——《吉他与孤独与蓝色星球》 思路 滑动区间(考察前后两个指针)，并且同时对元素状态和数量储存判断。这种思想有很多算法都有，比如说KMP算法等，可以将时间复杂度降低到线性。仔细想一下，其实如果单独对每一个区间都去计数，前后两个需要计算的区间有很大一部分是重叠的，也就是说这样会有很大的重复计算——能否通过复用之前的数据成了高效解决问题的一种思路 I Hide an integer时间限制：1000ms 内存限制：65536kb 通过率：408&#x2F;452 (90.27%) 正确率：408&#x2F;1179 (34.61%) 题目背景Koishi 想要用平衡五进制加密一封书信，传递给 Kisin Remilia。 题目描述所谓平衡五进制，是一种计数方法，在这个计数方法中， 从低到高第 $i$ 位的权重为 $5^i$，而第 $i$ 位只可能是 $−2,−1,0,1,2$ 五种（而非一般五进制中的 $0,1,2,3,4$）。为了表示方便，我们记 $−1$ 为 $A$，$−2$ 为 $B$。 比如，对于一个平衡五进制数 $1AB$，其值相当于十进制下的 $1×52+(−1)×51+(−2)×50&#x3D;18$。 具体到书信来说，这封书信一共有 $T$ 个单词，每个单词可以表示为一个自然数 $n$。为了加密这个自然数，Koishi决定用平衡五进制的方式重新书写每个数字。现在给定这个书信的每个原始单词，需要你输出加密后的书信。 输入第一行一个正整数 $T\\ (1≤T≤105)$，表示书信里的单词总数。 接下来 $T$ 行，每行一行一个自然数 $n$（$0≤n≤109$），表示书信里的单词。 输出对于每个单词，输出一行一个平衡五进制数，表示该单词加密后的结果。 需要注意的是，你的输出不应该包含多余的前导零。 输入样例1234567891097212197991051101161040 输出样例1234567891BA210A11AA21A0A1A101A2010B11A1A0 提示Koishi：如果想不出如何直接转化，不如先想想如何把一个十进制数转化成一个一般的五进制数，再想想一般五进制和平衡五进制的关系？ 以及，输入本身是 8 个字母。 THINK 注意提示 J 神奇的传送门时间限制：1000ms 内存限制：65536kb 通过率：186&#x2F;252 (73.81%) 正确率：186&#x2F;713 (26.09%) 题目描述Zeta 和他的朋友们正在探索一组神奇的传送门。经过不懈的探索，他们发现，每穿过一次传送门，自己都会被传送到某个传送门的门前（可能是同一扇门）。 如果有 $n$个人分别站在 $n$ 扇门前，每当他们同时穿过自己面前的门时，他们就会分别被传送到不同门前，即每扇门前有且仅有一人。 传送门之间有一定的传递关系，我们可以用一个数列 ${a_n}$ 来表示某一次的传递关系，$a_i$ 表示 $i$ 号 送到 $a_i$ 号门，显然，每一次传送中传送门的传递关系一般是不同的。 现在有 $n$ 个人分别站在 $n$ 个传送门前，人和传送门的编号均为 $1,2,…,n$ ，起初他们站在自己对应的传送门前，他们会共同穿过 $k+1$ 次自己面前的传送门，已知他们的最终位置，以及从倒数第 $2$ 次传送到第 $1$ 次传送中传送门的传递关系，请你推断出最后一次传送中传送门的传递关系。 一句话概括：对于集合 $A&#x3D;{1,2,…,n}$ 存在 $n!$ 种双射（一一映射）$f:A→A$ , 现给出其中 $k+1$ 种映射 $f,f_k,f_{k−1},…,f_2,f_1$ , 求映射$f_{k+1}$ 使得 $f_{k+1}∘f_k∘…∘f_2∘f_1&#x3D;f$ .（其中 ∘ 为映射的复合，例如 $(f1∘f2)(x)&#x3D;f1[f2(x)]$ 。） 输入第一行 1个整数 t 表示数据组数。($1≤t≤50$) 对于每组数据输入 $k+2$ 行： 第一行 2 个整数 $n,k$ 含义如题所示。（$1≤n≤2×103,1≤k≤100$） 第二行 $n$ 个整数，第 i 个数表示第 i 号人最终站在的传送门的编号。 接下来 k 行，每行 $n$ 个整数，从后往前地给出传送门的传递关系，即第 m 行第 i 个数 $a_i$ 表示在倒数第 m 次传送中，i号门传送到 $a_i$ 号门。 输出输出共 t 行。 对于每组数据，输出一行 n 个整数，第 i 个数 $a_i$ 表示在最后一次传送中 i 号门传送到 $a_i$ 号门。 输入样例12345615 32 1 3 4 51 5 3 2 44 1 3 2 55 1 2 4 3 输出样例13 1 5 2 4 样例解释起初，$1,2,3,4,5$ 号人分别在 $1,2,3,4,5 $号门前。 然后，经过输入样例最后一行 5 1 2 4 3 的传送，$1,2,3,4,5$ 号人分别在 $5,1,2,4,3$ 号门前。 然后，经过 4 1 3 2 5 的传送，处在 $1$ 号门前的 $2$ 号人被传送到 $4$ 号门前，以此类推，$1,2,3,4,5$ 号人分别在 $5,4,1,2,3$ 号门前 然后，经过 1 5 3 2 4 的传送，$1,2,3,4,5$ 号人分别在 $4,2,1,5,3$ 号门前 最后，经过输出样例 3 1 5 2 4 的传送，处在 $4$ 号门的 $1$ 号人被传送到 $2$ 号门前，以此类推，$1,2,3,4,5$ 号人分别在 $2,1,3,4,5$ 号门前，符合输入样例第三行。 THINK 函数就是特殊的关系，关系就是有序偶，有序偶可以用矩阵形式表示。所以就按照函数复合来实施矩阵运算就行——难点在于别写错，写错了重写一遍吧，debug可能浪费更多时间 K L形瓷砖时间限制：1000ms 内存限制：65536kb 通过率：47&#x2F;86 (54.65%) 正确率：47&#x2F;301 (15.61%) 题目描述你是一个装修公司的CEO，今天你接到了一单生意，让你在月球上贴瓷砖，客户给出的价格不菲，并且愿意承担来往的费用，你很心动，但是客户提出了一些要求，你的任务是给出满足客户要求的方案。 客户主要的要求如下： 只能使用如下的瓷砖（不可旋转） 要布满一个边长为 $n$ 的正方形区域，除了其中一个用来放置人类月球纪念碑的位置。 方案有多种，输出其中一种即可 输入第一行为一个整数 $n$ ，含义如上，保证： $n&#x3D;2^k,0≤k≤10$。 接下来两个整数，表示人类月球纪念碑的坐标 (从 $0$ 开始，左上角为坐标原点，$x$ 表示行号，$y$ 表示列号)。 输出$\\frac{n^2-1}{3}$ 行，每行一个字母，三个坐标，表示一块瓷砖，字母表示颜色，坐标是该瓷砖 $3$ 个部分的坐标，按照上图标号的顺序输出。 如果不存在可行的方案，请输出 None 。 瓷砖的输出顺序随意。 输入样例11221 0 输出样例11g (0,0) (0,1) (1,1) 输入样例21241 1 输出样例212345y (0,0) (1,0) (0,1)r (2,0) (3,0) (3,1)g (0,2) (0,3) (1,3)b (2,1) (1,2) (2,2)b (3,2) (2,3) (3,3) 样例解释对于样例 11：黑色的圆表示纪念碑 对于样例 22： Author: YUKI THINK 砖人 注意：自己多画两个图出来观察划分方法——明白整个过程怎么样划分子区域就能很好明白。 结果是一个 $4*4$ 的递归分治，但是类型比较多，所以要注意代码组织。 L NEVER FORGET时间限制：1000ms 内存限制：65536kb 通过率：41&#x2F;135 (30.37%) 正确率：41&#x2F;494 (8.30%) 题目描述 Hitori 发现了 $n$ 个正整数 $a_1,a_2,⋯,a_n$，它们构成了一个可重集合 $S$ ，即 $S&#x3D;{a_1,a_2,⋯,a_n}$，且 $∀a_i\\in S, 1\\le a_i\\le n$ 。 Nijika 取出了 $S$ 的所有非空子集，并告诉你，每个非空子集的价值等于该子集中所有元素的和，即对于 $T⊆S (T\\neq \\varnothing )$ ，其价值 $V_T&#x3D;\\sum_{a_x\\in T}a_x$ 。 $\\text{Ryo}$ 将 $S$ 所有非空子集的价值从小到大排序，排序后的价值构成了序列 $w_1,w_2,⋯,w_{2^n−1}$ 。 $\\text{Ikuyo}$ 想问你，$w_{2^n-1}$ 等于多少？ 输入输入包括两行 第一行包括一个正整数 $n$ 第二行包括 $n$ 个正整数 $a_1,a_2,⋯,a_n$ 输出输出包括一行 第一行包括一个正整数 $w_{2^n -1}$ 输入样例1232 1 2 输出样例13 样例解释$S$ 的所有非空子集分别为 ${2},{1},{2},{2,1},{2,2},{1,2},{2,1,2}$ 。 价值分别为 $2,1,2,3,4,3,5$ 。 从小到大排序后为 $1,2,2,3,3,4,5$ 。 故 $w_{2^n -1}&#x3D;w_4&#x3D;3$ 。 数据范围 对于 $50%$ 的数据， $1≤n≤16$ 对于 $70%$ 的数据， $1≤n≤200$ 对于 $100%$ 的数据， $1≤n≤500, 1≤a_i≤n$ 题目背景 - 续 等着你的我 我在等着你 连无尽的明天 都能够穿过 停下脚步 回头看 叹息着无休止的今天 永远这种事 记忆什么的 明知道这些都是留存不下来的 我还是为此苦恼挠头 在心的角落里哭泣 想要请你记住那些 在高架桥下渡过的美好时光 我依然在后悔 有话没能说出口 落荒而逃的那天 我们手牵手 曾经那些难舍难分的感情 这就是我的一切了 但是连这些 现在都失去了 时过境迁 物是人非 明知道世事无常 我却依然苦恼地直挠头 悔恨着有话说不出口的今天 想要请你记住那些 在高架桥下渡过的美好时光 我依然在后悔 有话没能说出口 落荒而逃的那天 等着你的我 我在等着你 连无尽的明天都能够穿过 我今天也依然苦恼地挠头 一直在黯然伤心 我非你莫属 ——《Re:Re:》 思路 这题真不会，别人的思路是一个$n^3$的dp和一个前缀和与二分——但是没听懂。还有一个思路是幂集的和是对称的，这样就可以缩小枚举区间，找出答案了 M 好想变得和你一样强！！！时间限制：1000ms 内存限制：65536kb 通过率：97&#x2F;172 (56.40%) 正确率：97&#x2F;488 (19.88%) 题目背景 所以，海的那边是什么？ 题目描述曾经，有一位强者名叫 Alice ，$\\text{\\text{Chtholly}}$ 想变得和她一样强 但是 $\\text{\\text{Chtholly}}$ 现在还无法做到，她只能摆弄手中的 $n$ 个整数 $a_1,a_2,⋯,a_n$ $\\text{\\text{Chtholly}}$ 可以进行若干次操作，每次操作可以从 $n$ 个整数中任意选择一个数 $ai$ ，将它加 1 或减 1 一个整数序列被称为“好序列”，当且仅当其单调递增，且相邻两数的差值为 11 如 $[2,3,4]$ 和 [9,10,11,12][9,10,11,12] 是“好序列”，而 [1,1,4,5][1,1,4,5] 和 [1,3,4][1,3,4] 不是“好序列” $\\text{\\text{Chtholly}}$ 想知道，最少通过多少次操作，可以将序列 $a_1,a_2,⋯,a_n$ 变为“好序列” 输入输入包括两行 第一行包括一个整数 $n$ 第二行包括 $n$ 个整数，$a_1,a_2,⋯,a_n$ 输出输出包括一行 第一行包括一个整数，表示最少的操作次数 输入样例 11247 1 4 9 输出样例 1111 输入样例 21271 9 1 9 8 1 0 输出样例 2129 样例解释对于样例 1 ，最优解之一是使序列变为 [2,3,4,5][2,3,4,5] 数据范围 对于 $50%$ 的数据，$1≤n≤103$ 对于 $100%$ 的数据，$1≤n≤105,0≤a_i≤109$ Hint本题可能需要用到排序算法 ，以下代码可以实现对数组的高效排序（从小到大），平均时间复杂度为 $O(n\\log 2n)$，可供参考 （课堂上没有讲解排序之前可以先不懂原理，能够把以下代码合理地嵌入进自己的程序之中来实现排序即可） 12345678910111213141516#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; //头文件需要添加 stdlib.hint cmp(const void *p1, const void *p2) &#123; if (*((int*)p1) &lt;= *((int*)p2)) return -1; return 1;&#125;int a[10] = &#123;1, 9, 4, 9, 2, 0, 2, 3&#125;; //此处元素下标从 0 开始int main() &#123; int n = 8; // n 为数组中的元素个数 qsort(a, n, sizeof(a[0]), cmp); // 排序 for (int i = 0; i &lt; n; i++) printf(&quot;%d &quot;, a[i]); printf(&quot;\\n&quot;); return 0;&#125; 本题可能需要用到 long long ，请留意 题目背景 - 续 屏幕在深夜微微发亮 思想在那虚树路径上彷徨 平面的向量交错生长 织成 忧伤的网 剪枝剪去我们的疯狂 SPFA告诉我前途在何方 01背包装下了忧伤 笑颜 洋溢脸庞 键盘微凉 鼠标微凉 指尖流淌 代码千行 凸包周长 直径多长 一进考场 全都忘光 你在OJ上提交了千百遍 却依然不能卡进那时限 双手敲尽代码也敲尽岁月 只有我一人 写的题解 凋零在OJ里面 tarjan陪伴强联通分量 生成树完成后思路才闪光 欧拉跑过的七桥古塘 让你 心驰神往 队列进出图上的方向 线段树区间修改求出总量 可持久留下的迹象 我们 俯身欣赏 数论算法 图论算法 高斯费马 树上开花 线性规划 动态规划 时间爆炸 如何优化 我在OI中辗转了千百天 却不让我看AK最后一眼 我用空间换回超限的时间 随重新编译 测完样例 才发现漏洞满篇 原来CE 是因选错语言 其实爆0 只因忘写文件 如果标算太难请坚定信念 不如回头再看一眼题面 以那暴力模拟向正解吊唁 蒟蒻的蜕变 神犇出现 终将与Au擦肩 屏幕在深夜微微发亮 我心在考场 —— Menci&#x2F;24OI 《膜你抄》 THINK 假设最终所得的序列为$k,k+1,…,k+n-1$,则目的可以转化成求函数$f(k)&#x3D;\\sum_{i&#x3D;0}^{n-1}|k+i-a_i|&#x3D;\\sum_{i&#x3D;0}^{n-1}|k-(a_i-i)|$ 的最小值，这是一个一维绝对值函数，中学数学告诉你最值点在序列 $a_i-i$ 的中位数上，所以先排序，然后求中位数，最后计算答案即可 N 世界上最幸福的女孩时间限制：1000ms 内存限制：65536kb 通过率：279&#x2F;366 (76.23%) 正确率：279&#x2F;1368 (20.39%) 题目背景 所以，我敢肯定……现在的我……不管别人怎么说，一定是世界上最幸福的女孩。 $\\mathbf{Chtholly⋅Nota⋅Seniorious}$ 题目描述$\\text{Chtholly}$ 收到了一份生日礼物 生日礼物里有 $n$ 个整数 $x_1,x_2,⋯,x_n$，$\\text{Chtholly}$ 可以随意指定每一个整数的数值，但是要满足：对于任意的 $1≤i≤n$ ，都有 $1≤x_i≤m$，且 $x_i$ 互不相等 $\\text{Chtholly}$ 不喜欢三角形，所以她不希望这 $n$ 个整数中存在三个数，可以作为同一个三角形三条边的边长，即：不存在$ x_i,x_j,x_k$（$1≤i,j,k≤n$, 且 $i,j,k$ 互不相等），满足 $x_i+x_j&gt;x_k$ $\\text{Chtholly}$ 想知道，是否存在一种对于 $x_1,x_2,⋯,x_n$ 的数值指定方案，满足：对于其中的任意三个数，都不能作为同一个三角形三条边的边长 输入输入包含多组数据 第一行包含一个整数 $T$ ，表示数据组数 接下来 $T$ 行，每一行包含两个整数 $n,m$ ，表示一组数据 输出对于每组数据，输出一行 若存在满足条件的方案，则输出 YE5，否则输出 N0 输入样例12345678710 24 75 73 3114 5141 116454536251 1145141919810 输出样例1234567N0YE5N0YE5N0YE5N0 样例解释 当 $n&#x3D;4,m&#x3D;7$ 时，可以使 4 个整数分别为 $1,2,4,7$ ，满足要求 当 $n&#x3D;3,m&#x3D;3$ 时，可以使 3 个整数分别为 $1,2,3$ ，满足要求 当$ n&#x3D;1,m&#x3D;1$ 时，显然满足要求 数据范围 对于 $100%$ 的数据，满足 $1≤T≤10^5,1≤n≤10^{18},1≤m≤10^{18}$ 题目背景 - 续 I once swore to be with him forever, I once swore to be with him forever, and being able to make such a vow made me incredibly ha$p$y.and being able to make such a vow made me incredibly ha$p$y. I once swore to be with her forever,I once swore to be with her forever, and being able to make such a vow made me incredibly peaceful.and being able to make such a vow made me incredibly peaceful. Having such feelings makes me incredibly ha$p$y.Having such feelings makes me incredibly ha$p$y. Having such feelings makes me incredibly joyful.Having such feelings makes me incredibly joyful. He once said to me: I will definitely make you ha$p$y.He once said to me: I will definitely make you ha$p$y. I once said to her: I will definitely make you ha$p$y.I once said to her: I will definitely make you ha$p$y. Hearing him say that made me incredibly ha$p$y.Hearing him say that made me incredibly ha$p$y. Being able to say that to her made me incredibly satisfied.Being able to say that to her made me incredibly satisfied. He shared so much ha$p$iness with me.He shared so much ha$p$iness with me. I received so much from her, but I…I received so much from her, but I… So for sure, I am the ha$p$iest girl in the world right now,So for sure, I am the ha$p$iest girl in the world right now, no matter what others say. THINK 问题限制条件就是一个隐藏的 斐波那切数列","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Summary for 2024-10-08","slug":"Summary0","date":"2024-10-06T12:38:30.000Z","updated":"2024-10-09T13:57:10.194Z","comments":true,"path":"2024/10/06/Summary0/","permalink":"http://example.com/2024/10/06/Summary0/","excerpt":"","text":"Special - 2024国庆思维训练特别赛 浪费了国庆几天时间，不会做的还是不会做，不得不说 $\\mathbf{PUAA}$ 的出题有水平，新人中也不缺乏高手。 22 for 7 days 本文如果侵害了你的版权，请及时联系删除，谢谢。 A 石头 剪刀 布题目描述有三个玩家 A、B、C 玩剪刀石头布游戏。游戏规则如下： 每位玩家出拳只能是“剪刀”、“石头”或“布”中的一个。 如果三位玩家出拳都不相同或都相同，则没有玩家获胜。 如果场上只出了 “剪刀” 和 “石头” ，则出“石头”的玩家获胜。 如果场上只出了 “剪刀” 和 “布” ，则出“剪刀”的玩家获胜。 如果场上只出了 “布” 和 “石头” ，则出“布”的玩家获胜。 每局的获胜玩家均获得 1 分 你作为游戏裁判，需要编写一个程序来确定每位玩家 m 轮游戏后的得分情况。 输入共 m+1 行。 第一行，一个正整数 m，表示 m 轮游戏。保证 $1≤m≤100$ 接下来 m 行，每行三个空格隔开的整数 a 、b 、c ，分别表示玩家 A、B、C 的出拳。保证 $a,b,c∈0,1,2$ 分别表示剪刀、石头、布。 输出共 1 行，共三个非负整数，分别表示玩家 A、B、C 的得分。 输入样例12320 0 01 0 0 输出样例11 0 0 THINK 模拟即可 B 验证身份证号时间限制：1000ms 内存限制：65536kb 通过率：1072&#x2F;1217 (88.09%) 正确率：1072&#x2F;3600 (29.78%) 题目介绍中华人民共和国公民的身份证号码由 18 位数字或 X 组成，其中最后一位可能是 X。 身份证号码的前 66 位表示行政区划代码，第 7 位到第 14 位表示出生日期，第 15 位到第 17 位表示顺序码，第 18 位表示校验码。 现给定若干个身份证号，请检验身份证号是否合法。如果合法，输出 YES，否则输出 NO。 保证前 17 位数字合法，因此你只需要检验第 18 位校验码是否合法即可。 校验码的计算方法如下： 将前面的身份证号码 17 位数分别乘以不同的系数。从第 1 位到第 17 位的系数分别为$7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2$。 将这 17 位数字和系数相乘的结果相加。 用加出来的和除以 11，看余数是多少。 余数只可能有 $0,1,2,3,4,5,6,7,8,9,10$ 这 11 个数字。其分别对应的最后一位身份证的号码为 $1,0,X,9,8,7,6,5,4,3,2$ 。(即余数 0 对应 1 ，余数 1 对应 0 ，余数 2 对应 $X$ …) 输入格式共 n+1 行。 第一行一个正整数 n ，保证 $1≤n≤50$ 。 接下来 n 行，每一行为一个身份证号。（若最后一位为 $X$，则为大写字母 X） 输出格式输出 n 行。 每行表示身份证号码是否合法。如果合法，输出 YES，否则输出 NO。 输入样例1232371311200312247819130631197601191234 输出样例12YESNO Hint在计算系数相乘结果之和时，除了直接写出表达式以外，我们也可以采用 “数组+循环” 的方式。 假设需要计算 $3×5+9×7+4×93×5+9×7+4×9$ 我们可以直接写 sum = 3*5+9*7+4*9; 同时，我们也可以写成 1234567int a[3] = &#123;3,9,4&#125;;int b[3] = &#123;5,7,9&#125;;int sum = 0;for (int i = 0; i &lt; 3; ++i) &#123; sum += (a[i] * b[i]);&#125; 看似代码量变大了，但如果需要计算 17 个系数相乘结果之和时，“数组+循环”的方法或许会更便捷且不易出错。 C nbnhhsh？时间限制：1000ms 内存限制：65536kb 通过率：876&#x2F;973 (90.03%) 正确率：876&#x2F;2450 (35.76%) 题目描述qjsywcyycxsjzj。 看得懂吗？看不懂就对了。上面这句话的意思是，“奇迹是一位C语言程序设计助教”。 由于语言能力本当苦手，奇迹对汉语拼音首字母缩写理解不能。为了训练，他想通过英文句子缩写入手，你能帮他编写一个程序，自动生成缩写吗？ 输入一行一个字符串$s$，由若干英文单词、空格、标点符号组成。 输出对于每组数据，输出一行，缩写后的句子。若单词中出现了单引号，认为是一个单词。 缩写规则：连续的英文字母或单引号认为是一个单词，输出该单词的第一个字母，区分大小写（特别地，数据保证一个单词不会以单引号开头）；其他标点符号原样输出；空格省去。 输入样例11Man, What can I say? Mamba out! 输出样例11M,WcIs?Mo! 输入样例21BanG Dream! It&#x27;s MyGO!!! 输出样例21BD!IM!!! Not hint本题的题目全拼为“能不能好好说话” THINK 空格分词，处理首尾字符 D tux 的飞行编队安排 (Hard Version)时间限制：1000ms 内存限制：65536kb 通过率：739&#x2F;797 (92.72%) 正确率：739&#x2F;1247 (59.26%) 题目描述今年是国庆 75 周年，tux 想安排一场飞行表演来庆祝国庆。为了让表演更加壮观，参与表演的飞机数量要尽可能多，但是 tux 最多只能使用 $n$ 架飞机（可以使用小于等于 $n$ 架）。编队必须严格排列成如下格式的 “75” 形状（星号代表飞机）： 1234567**** **** * * * * * **** * * * * * **** 图形解释：设图形中 “7” 和 “5” 的横向宽度为 $k$（$k≥3$，图中为 4），则 “7” 的纵向高度为 $2k−1$，“7” 的竖线略有倾斜，斜率为 2 。“5” 共有三条横线，相邻的横线之间有 $k−2$ 行。“7” 和 “5” 之间用 $k$ 个空格隔开，“7” 左侧没有空格，上方没有空行。 输入一个数，表示 tux 最多能使用 $n$ 架飞机，$18≤n≤4000$. 输出若干行字符，表示在使用不超过 $n$ 架飞机的条件下可以形成的最大编队安排。飞机用星号*表示。 输入样例1142 输出样例11234567891011****** ****** * * * * * * * * * ****** * * * * * * * * * ****** 样例解释1$k&#x3D;6$，全部 $42$ 架飞机均参与表演。 输入样例2125 输出样例212345*** *** * * * *** * * * *** 样例解释2排成 $k&#x3D;3$ 的编队至少需要 $18$ 架飞机，排成 $k&#x3D;4$ 的编队至少需要 $26$ 架飞机。现有 $25$ 架飞机，最多只够满足 $k&#x3D;3$ 的编队。 Hint试着用 $k$ 表示编队飞机的数目，寻找 $n$ 和 $k$ 的关系。 THINK 诚如Hint，用k表示编队飞机的数目，寻找n和k的关系。多用几个if就行了。 E 拾贝时间限制：1000ms 内存限制：65536kb 通过率：803&#x2F;916 (87.66%) 正确率：803&#x2F;2797 (28.71%) 题目描述ZetaZeta 突然穿越到了原始社会！他发现，那里的人们以收集贝壳为荣，收集贝壳数量多的人可以称王。他们当中有 $n$ 个人收集的贝壳较多，但不尽相同，于是他们决定，这 $n$ 个人首先排好出场顺序，第一天让第一个出场的人称王，之后的 $n−1$ 天，按顺序出一个人与前一天的王比较贝壳的数量，如果那个人贝壳的数量大于前一天的王的贝壳数量，则取而代之。ZetaZeta 想知道，第 $k$ 天谁在称王。 输入第一行 22 个整数$n,t$ ，表示总人数和询问次数。$(1≤n≤2×105，1≤t≤2×105)$ 第二行 $n$ 个整数，第 $i$ 个数表示第 $i$ 个出场的人收集到的贝壳的数量 $a_i$ 。$(1≤i≤n,1≤a_i≤109)$ 接下来 $t$ 行，每行 1 个整数 $k$ ，询问：在第 $k$ 天是第几个出场的人在称王。$(1≤k≤n)$ 输出输出 $t$ 行，每行 $1$ 个整数，表示第几个出场的人在称王。 输入样例123456789101110 911 12 12 12 7 6 23 128 1 7123456789 输出样例123456789122222788 Hint仔细观察给的样例，有没有想到什么呢~ THINK 前 $k$ 天最大值 F 生日悖论时间限制：1000ms 内存限制：65536kb 通过率：949&#x2F;986 (96.25%) 正确率：949&#x2F;1738 (54.60%) 题目描述一个班级有 $n$ 人。请问，班级所有人的生日都互不相同的概率为多少？ 一年有 $365$ 天（不考虑闰年），假设每个人的生日互相独立且在这 $365$ 天里等概率分布的。 输入第一行一个正整数 $t$ 代表数据组数，$1≤t≤365$ 接下来 $t$ 行，每行一个正整数 $n$，$1≤n≤365$ 输出对于每组数据，输出一行一个浮点数，代表班级所有人的生日都互不相同的概率，保留 $6$ 位小数输出。 输入样例12345651030901365 输出样例123450.8830520.2936840.0000061.0000000.000000 G 奇迹！下雪啦！时间限制：1000ms 内存限制：65536kb 通过率：337&#x2F;381 (88.45%) 正确率：337&#x2F;637 (52.90%) 题目描述奇迹出生在遥远的南方！在来北方上学之前，奇迹从来没见过雪，第一次看到下雪的时候，他想体验一下滚雪球。首先在手上捏一个小小的核心，然后在地上越滚越大。每秒钟雪球都会向前（顺时针）滚 $1&#x2F;4$ 圈，奇迹想知道第 $x$ 秒钟雪球有多大？ 输入1行1个正整数 $x$，保证 $x≤100$. 输出一个 $⌊1+x2⌋×⌊1+x−12⌋$ 阶的矩阵，代表第 $x$ 秒钟雪球的样子。 输入样例15 输出样例1234 3 34 1 25 5 5 样例解释12345678910111213141516在第一秒钟，雪球的样子是1第2至5秒，雪球的样子分别是122 13 33 23 14 44 3 34 1 25 5 5 THINK 不知道是否能降低时间复杂度。这里提供的思路是先构造一个二维数组，然后模拟逆向过程，一圈一圈往回打表，逐渐收缩到核心。最后输出。时间复杂度为 $O(n^2)$.空间复杂度 $O(n^2)$模拟过程让我想到了矢量绘图","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-10-06T12:16:27.857Z","updated":"2024-10-09T11:13:33.402Z","comments":true,"path":"2024/10/06/hello-world/","permalink":"http://example.com/2024/10/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 优雅的写文章Fluid 是一款很十分优雅的主题，那么写一篇优雅的文章搭配它呢？以下会从几个方面来简述，主要还是做几个推荐。 熟悉 Markdown 语法对于使用 Hexo 的大多数人来说，相信对 Markdown 的语法不会陌生。熟练掌握 Markdown 语法对我们的写作拥有极大的帮助，这里用少用的表格和脚注来举个例子。至于为什么有些公式、流程图无法渲染，是因为 Markdown 追求简洁式写作，默认渲染器不支持复杂渲染。 表格站点 地址 介绍Fluid Docs https://hexo.fluid-dev.com/docs/ Fluid 官方文档Hexo-theme-fluid https://github.com/fluid-dev/hexo-theme-fluid Fluid Github RepoFluid Blog https://hexo.fluid-dev.com/ Fluid 官方博客 站点 地址 介绍 Fluid Docs https://hexo.fluid-dev.com/docs/ Fluid 官方文档 Hexo-theme-fluid https://github.com/fluid-dev/hexo-theme-fluid Fluid Github Repo Fluid Blog https://hexo.fluid-dev.com/ Fluid 官方博客 脚注默认渲染器下正常显示，不同渲染器显示效果不同，写法如下： 12脚注演示[^1][^1]: 脚注内容演示 脚注演示&lt;span class&#x3D;”hint–top hint–rounded” aria-label&#x3D;”脚注内容演示 善用 HTML我们可以在 Markdown 中插入一些简单的 HTML 代码或 CSS 片段来获得更多扩展，使得文章内容更具有多样性。以下演示几个简单功能。”&gt;[1] 跳转位置演示（跳转位置设置点） 文字颜色#519D9E颜色演示 1&lt;span style=&quot;color: #519D9E; &quot;&gt;#519D9E颜色演示&lt;/span&gt; #519D9E颜色演示 文字大小0.7em 文字大小演示 1&lt;span style=&quot;font-size:0.7em;&quot;&gt;0.7em 文字大小演示&lt;/span&gt; 0.7em 文字大小演示 文字位置内容居中演示 1&lt;p style=&quot;text-align:center&quot;&gt;内容居中演示&lt;/p&gt; # 可以修改 text-align 参数来设置文字位置。 内容居中演示 页内跳转 点击到达跳转位置演示 点击到达跳转位置演示 # 在需要跳转的地方添加此代码。跳转位置演示（跳转位置设置点） # 在跳转位置添加次代码。 综合演示12345&lt;p style=&quot;text-align:center;color:#8EC0E4;font-size:1.5em;font-weight: bold;&quot;&gt;综合演示&lt;br&gt;优雅使用 Fluid 写文章&lt;/p&gt; 综合演示 优雅使用 Fluid 写文章 iframe 页面镶套iframe 页面镶套可以帮助我们更好的展示一个页面。比如以下演示页面。 1&lt;iframe src=&quot;https://hexo.fluid-dev.com/&quot; width=&quot;100%&quot; height=&quot;500&quot; name=&quot;topFrame&quot; scrolling=&quot;yes&quot; noresize=&quot;noresize&quot; frameborder=&quot;0&quot; id=&quot;topFrame&quot;&gt;&lt;/iframe&gt; 一些参数说明，width&#x3D;”100%” 为宽度自适应，高度请根据实际需求跳转，注意移动端页面是否匹配。 scrolling 为滚动条参数。frameborder 为边框参数。noresize 属性规定用户无法调整框架的大小。 details 标签用于展示代码较多需要折叠或折叠相关内容，以下为演示，summary 填写显示名称。 Demo Demo 123456type Map struct &#123; mu Mutex read atomic.Value dirty map[interface&#123;&#125;]*entry misses int&#125; 对应的实现代码： 1234567891011&lt;details&gt;&lt;summary&gt;Demo&lt;/summary&gt;```gotype Map struct &#123; mu Mutex read atomic.Value dirty map[interface&#123;&#125;]*entry misses int&#125;\\```&lt;/details&gt; 善用 Tag 组件 Fluid 内置了许多 Tag 组件，包含便签、行内标签（已知不会出现间隔，谨慎使用）、勾选框、按钮和组图，可以使用这些组件来丰富文章内容，具体点击查看官方文档查看，点击跳转到 Fluid Doc。 配图众所周知，博客好不好看，配图占一半。这里给大家推荐几个我常用找配图的地方。另外，请遵循相关网站的版权协议。 Wallpaper Hub Wallhaven Unsplash 更多技巧，上网自行搜索。例如查阅官方 Wiki 或是 博客经验 STFM 又多互联网上的垃圾脚注内容演示 善用 HTML我们可以在 Markdown 中插入一些简单的 HTML 代码或 CSS 片段来获得更多扩展，使得文章内容更具有多样性。以下演示几个简单功能。 ↩","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]}