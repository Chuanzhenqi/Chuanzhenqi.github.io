{"meta":{"title":"Sao&i_T@ng","subtitle":"","description":"","author":"独步星尘","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2024-10-07T19:43:40.000Z","updated":"2024-10-07T19:43:40.155Z","comments":false,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"About me","date":"2024-10-06T12:29:42.000Z","updated":"2024-10-06T12:29:42.702Z","comments":false,"path":"about/me.html","permalink":"http://example.com/about/me.html","excerpt":"","text":""}],"posts":[{"title":"Sumery for 2024-10-08","slug":"Sumery","date":"2024-10-06T12:38:30.000Z","updated":"2024-10-07T20:41:37.496Z","comments":true,"path":"2024/10/06/Sumery/","permalink":"http://example.com/2024/10/06/Sumery/","excerpt":"Special - 2024国庆思维训练特别赛 浪费了国庆几天时间，不会做的还是不会做，不得不说PUAA的出题有水平，新人中也不缺乏高手。 22 for 7 days","text":"Special - 2024国庆思维训练特别赛 浪费了国庆几天时间，不会做的还是不会做，不得不说PUAA的出题有水平，新人中也不缺乏高手。 22 for 7 days A 石头 剪刀 布题目描述有三个玩家 A、B、C 玩剪刀石头布游戏。游戏规则如下： 每位玩家出拳只能是“剪刀”、“石头”或“布”中的一个。 如果三位玩家出拳都不相同或都相同，则没有玩家获胜。 如果场上只出了 “剪刀” 和 “石头” ，则出“石头”的玩家获胜。 如果场上只出了 “剪刀” 和 “布” ，则出“剪刀”的玩家获胜。 如果场上只出了 “布” 和 “石头” ，则出“布”的玩家获胜。 每局的获胜玩家均获得 1 分 你作为游戏裁判，需要编写一个程序来确定每位玩家 m 轮游戏后的得分情况。 输入共 m+1 行。 第一行，一个正整数 m，表示 m 轮游戏。保证 1≤m≤100 接下来 m 行，每行三个空格隔开的整数 a 、b 、c ，分别表示玩家 A、B、C 的出拳。保证 a,b,c∈0,1,2 分别表示剪刀、石头、布。 输出共 1 行，共三个非负整数，分别表示玩家 A、B、C 的得分。 输入样例12320 0 01 0 0 输出样例11 0 0 B 验证身份证号时间限制：1000ms 内存限制：65536kb 通过率：1072&#x2F;1217 (88.09%) 正确率：1072&#x2F;3600 (29.78%) 题目介绍中华人民共和国公民的身份证号码由 18 位数字或 X 组成，其中最后一位可能是 X。 身份证号码的前 66 位表示行政区划代码，第 7 位到第 14 位表示出生日期，第 15 位到第 17 位表示顺序码，第 18 位表示校验码。 现给定若干个身份证号，请检验身份证号是否合法。如果合法，输出 YES，否则输出 NO。 保证前 17 位数字合法，因此你只需要检验第 18 位校验码是否合法即可。 校验码的计算方法如下： 将前面的身份证号码 17 位数分别乘以不同的系数。从第 1 位到第 17 位的系数分别为7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2。 将这 17 位数字和系数相乘的结果相加。 用加出来的和除以 11，看余数是多少。 余数只可能有 0,1,2,3,4,5,6,7,8,9,10 这 11 个数字。其分别对应的最后一位身份证的号码为 1,0,X,9,8,7,6,5,4,3,2 。(即余数 0 对应 1 ，余数 1 对应 0 ，余数 2 对应 $X$ …) 输入格式共 n+1 行。 第一行一个正整数 n ，保证 1≤n≤50 。 接下来 n 行，每一行为一个身份证号。（若最后一位为 $X$，则为大写字母 X） 输出格式输出 n 行。 每行表示身份证号码是否合法。如果合法，输出 YES，否则输出 NO。 输入样例1232371311200312247819130631197601191234 输出样例12YESNO Hint在计算系数相乘结果之和时，除了直接写出表达式以外，我们也可以采用 “数组+循环” 的方式。 假设需要计算 3×5+9×7+4×93×5+9×7+4×9 我们可以直接写 sum = 3*5+9*7+4*9; 同时，我们也可以写成 1234567int a[3] = &#123;3,9,4&#125;;int b[3] = &#123;5,7,9&#125;;int sum = 0;for (int i = 0; i &lt; 3; ++i) &#123; sum += (a[i] * b[i]);&#125; 看似代码量变大了，但如果需要计算 1717 个系数相乘结果之和时，“数组+循环”的方法或许会更便捷且不易出错。 C nbnhhsh？时间限制：1000ms 内存限制：65536kb 通过率：876&#x2F;973 (90.03%) 正确率：876&#x2F;2450 (35.76%) 题目描述qjsywcyycxsjzj。 看得懂吗？看不懂就对了。上面这句话的意思是，“奇迹是一位C语言程序设计助教”。 由于语言能力本当苦手，奇迹对汉语拼音首字母缩写理解不能。为了训练，他想通过英文句子缩写入手，你能帮他编写一个程序，自动生成缩写吗？ 输入一行一个字符串$s$，由若干英文单词、空格、标点符号组成。 输出对于每组数据，输出一行，缩写后的句子。若单词中出现了单引号，认为是一个单词。 缩写规则：连续的英文字母或单引号认为是一个单词，输出该单词的第一个字母，区分大小写（特别地，数据保证一个单词不会以单引号开头）；其他标点符号原样输出；空格省去。 输入样例11Man, What can I say? Mamba out! 输出样例11M,WcIs?Mo! 输入样例21BanG Dream! It&#x27;s MyGO!!! 输出样例21BD!IM!!! Not hint本题的题目全拼为“能不能好好说话” D tux 的飞行编队安排 (Hard Version)时间限制：1000ms 内存限制：65536kb 通过率：739&#x2F;797 (92.72%) 正确率：739&#x2F;1247 (59.26%) 题目描述今年是国庆 75 周年，tux 想安排一场飞行表演来庆祝国庆。为了让表演更加壮观，参与表演的飞机数量要尽可能多，但是 tux 最多只能使用 $n$ 架飞机（可以使用小于等于 $n$ 架）。编队必须严格排列成如下格式的 “75” 形状（星号代表飞机）： 1234567**** **** * * * * * **** * * * * * **** 图形解释：设图形中 “7” 和 “5” 的横向宽度为 $k$（$k≥3$，图中为 4），则 “7” 的纵向高度为 $2k−1$，“7” 的竖线略有倾斜，斜率为 2 。“5” 共有三条横线，相邻的横线之间有 $k−2$ 行。“7” 和 “5” 之间用 $k$ 个空格隔开，“7” 左侧没有空格，上方没有空行。 输入一个数，表示 tux 最多能使用 $n$ 架飞机，$18≤n≤4000$. 输出若干行字符，表示在使用不超过 $n$ 架飞机的条件下可以形成的最大编队安排。飞机用星号*表示。 输入样例1142 输出样例11234567891011****** ****** * * * * * * * * * ****** * * * * * * * * * ****** 样例解释1$k&#x3D;6$，全部 42 架飞机均参与表演。 输入样例2125 输出样例212345*** *** * * * *** * * * *** 样例解释2排成 $k&#x3D;3$ 的编队至少需要 $18$ 架飞机，排成 $k&#x3D;4$ 的编队至少需要 26 架飞机。现有 25 架飞机，最多只够满足 $k&#x3D;3$ 的编队。 Hint试着用 $k$ 表示编队飞机的数目，寻找 $n$ 和 $k$ 的关系。 E 拾贝时间限制：1000ms 内存限制：65536kb 通过率：803&#x2F;916 (87.66%) 正确率：803&#x2F;2797 (28.71%) 题目描述ZetaZeta 突然穿越到了原始社会！他发现，那里的人们以收集贝壳为荣，收集贝壳数量多的人可以称王。他们当中有 $n$ 个人收集的贝壳较多，但不尽相同，于是他们决定，这 $n$ 个人首先排好出场顺序，第一天让第一个出场的人称王，之后的 $n−1$ 天，按顺序出一个人与前一天的王比较贝壳的数量，如果那个人贝壳的数量大于前一天的王的贝壳数量，则取而代之。ZetaZeta 想知道，第 $k$ 天谁在称王。 输入第一行 22 个整数$ n,t$ ，表示总人数和询问次数。$(1≤n≤2×105，1≤t≤2×105)$ 第二行 $n$ 个整数，第 $i$ 个数表示第 $i$ 个出场的人收集到的贝壳的数量 $$a_i$$ 。$(1≤i≤n,1≤$a_i$≤109)$ 接下来 $t$ 行，每行 1 个整数 $k$ ，询问：在第 $k$ 天是第几个出场的人在称王。$(1≤k≤n)$ 输出输出 $t$ 行，每行 $1$ 个整数，表示第几个出场的人在称王。 输入样例123456789101110 911 12 12 12 7 6 23 128 1 7123456789 输出样例123456789122222788 Hint仔细观察给的样例，有没有想到什么呢~ F 生日悖论时间限制：1000ms 内存限制：65536kb 通过率：949&#x2F;986 (96.25%) 正确率：949&#x2F;1738 (54.60%) 题目描述一个班级有 $n$ 人。请问，班级所有人的生日都互不相同的概率为多少？ 一年有 $365$ 天（不考虑闰年），假设每个人的生日互相独立且在这 $365$ 天里等概率分布的。 输入第一行一个正整数 $t$ 代表数据组数，$1≤t≤365$ 接下来 $t$ 行，每行一个正整数 $n$，$1≤n≤365$ 输出对于每组数据，输出一行一个浮点数，代表班级所有人的生日都互不相同的概率，保留 $6$ 位小数输出。 输入样例12345651030901365 输出样例123450.8830520.2936840.0000061.0000000.000000 G 奇迹！下雪啦！时间限制：1000ms 内存限制：65536kb 通过率：337&#x2F;381 (88.45%) 正确率：337&#x2F;637 (52.90%) 题目描述奇迹出生在遥远的南方！在来北方上学之前，奇迹从来没见过雪，第一次看到下雪的时候，他想体验一下滚雪球。首先在手上捏一个小小的核心，然后在地上越滚越大。每秒钟雪球都会向前（顺时针）滚 $1&#x2F;4$ 圈，奇迹想知道第 $x$ 秒钟雪球有多大？ 输入1行1个正整数 $x$，保证 $x≤100$. 输出一个 $⌊1+x2⌋×⌊1+x−12⌋$ 阶的矩阵，代表第 $x$ 秒钟雪球的样子。 输入样例15 输出样例1234 3 34 1 25 5 5 样例解释12345678910111213141516在第一秒钟，雪球的样子是1第2至5秒，雪球的样子分别是122 13 33 23 14 44 3 34 1 25 5 5 H 吉他与孤独与蓝色星球！时间限制：500ms 内存限制：65536kb 通过率：241&#x2F;497 (48.49%) 正确率：241&#x2F;1899 (12.69%) 题目描述长大以后，$\\text{Hitori}$ 成为了远近闻名的社交达人！ $\\text{Hitori}$ 一共交到了 $m$ 个朋友，每个朋友都有一种独一无二的颜色。为了方便，我们用数字来表示每位朋友的颜色，即：第 $i$ 位朋友的颜色为 $i$ 。 这一天，$\\text{Hitori}$ 又在坐地铁。她发现线路图上从左到右一共有 $n$ 个换乘站，第 $i$ 个换乘站对应的线路颜色为 $a_i$$a_i$ ，并且 $1≤a_i≤m$ 。对于这样一个由颜色构成的序列， $\\text{Hitori}$ 将其称为整数序列 $a$ 。 $\\text{Hitori}$ 想起了她的 $m$ 个朋友，她想知道，在序列 $a$ 中，有多少个长度为 $m$ 的子段，满足在子段中，每位朋友的颜色都恰好只出现了一次。 说明： 一个序列是 $a$ 的子段，当且仅当该序列由若干个 $a$ 中连续的元素按顺序组成。如，$[1,2,3]$ 和$ [3,3,5]$ 是 $[1,2,3,3,5]$ 的子段，但 $[1,3,5]$ 和 $ [1,3,2]$ 不是。 输入输入包含两行。 第一行包含两个整数 $n,m$ ，分别表示序列 $a$ 的长度和 $\\text{Hitori}$ 朋友的数量。 第二行包含 $n$ 个整数 $a1,a2,a3,⋯,an (1≤$a_i$≤m)$，表示颜色序列 $a$ 。 输出输出一行，包括一个整数，表示满足要求的子段数量。 输入样例 1125 33 2 1 3 1 输出样例 112 输入样例 2125 43 2 1 4 3 输出样例 212 输入样例 3122 33 1 输出样例 310 样例解释在样例 $1$ 中，长度为 $3$ 的子段有 3 个，分别是 $[3,2,1],[2,1,3],[1,3,1]$ 。 其中 $[3,2,1],[2,1,3]$ 满足 $3$ 种颜色都恰好出现了一次。 $[1,3,1]$ 中，$2$ 没有出现，$1$ 出现了两次，不符合条件。 故答案为 $2$ 。 数据范围 对于 $88%$ 的数据，满足 $1≤n,m≤5000$ 对于 $100%$ 的数据，满足 $1≤n,m≤106$ 题目背景 在北京地铁 88 号线上，$\\text{Hitori}$ 发现线路图上 $14$ 号线、$7$ 号线、$2$ 号线和 $1$ 号线的颜色依次是粉色、黄色、蓝色、红色，正好对应了她和她的三个朋友。 只不过为什么粉色要离得比较远呢？ $Hitori$ 不由得唱起了： 愚昧无知的我唯有放声高歌 倾诉一切吧 对那星辰 ——《吉他与孤独与蓝色星球》 I Hide an integer时间限制：1000ms 内存限制：65536kb 通过率：408&#x2F;452 (90.27%) 正确率：408&#x2F;1179 (34.61%) 题目背景Koishi 想要用平衡五进制加密一封书信，传递给 Kisin Remilia。 题目描述所谓平衡五进制，是一种计数方法，在这个计数方法中， 从低到高第 $i$ 位的权重为 $5^i$，而第 $i$ 位只可能是 $−2,−1,0,1,2$ 五种（而非一般五进制中的 $0,1,2,3,4$）。为了表示方便，我们记 $−1$ 为 $A$，$−2$ 为 $B$。 比如，对于一个平衡五进制数 $1AB$，其值相当于十进制下的 $1×52+(−1)×51+(−2)×50&#x3D;18$。 具体到书信来说，这封书信一共有 $T$ 个单词，每个单词可以表示为一个自然数 $n$。为了加密这个自然数，Koishi决定用平衡五进制的方式重新书写每个数字。现在给定这个书信的每个原始单词，需要你输出加密后的书信。 输入第一行一个正整数 $T\\ (1≤T≤105)$，表示书信里的单词总数。 接下来 $T$ 行，每行一行一个自然数 $n$（$0≤n≤109$），表示书信里的单词。 输出对于每个单词，输出一行一个平衡五进制数，表示该单词加密后的结果。 需要注意的是，你的输出不应该包含多余的前导零。 输入样例1234567891097212197991051101161040 输出样例1234567891BA210A11AA21A0A1A101A2010B11A1A0 提示Koishi：如果想不出如何直接转化，不如先想想如何把一个十进制数转化成一个一般的五进制数，再想想一般五进制和平衡五进制的关系？ 以及，输入本身是 8 个字母。 J 神奇的传送门时间限制：1000ms 内存限制：65536kb 通过率：186&#x2F;252 (73.81%) 正确率：186&#x2F;713 (26.09%) 题目描述Zeta 和他的朋友们正在探索一组神奇的传送门。经过不懈的探索，他们发现，每穿过一次传送门，自己都会被传送到某个传送门的门前（可能是同一扇门）。 如果有 $n$个人分别站在 $n$ 扇门前，每当他们同时穿过自己面前的门时，他们就会分别被传送到不同门前，即每扇门前有且仅有一人。 传送门之间有一定的传递关系，我们可以用一个数列 ${a_n}$ 来表示某一次的传递关系，$a_i$ 表示 $i$ 号 送到 $a_i$ 号门，显然，每一次传送中传送门的传递关系一般是不同的。 现在有 $n$ 个人分别站在 $n$ 个传送门前，人和传送门的编号均为 $1,2,…,n$ ，起初他们站在自己对应的传送门前，他们会共同穿过 $k+1$ 次自己面前的传送门，已知他们的最终位置，以及从倒数第 $2$ 次传送到第 $1$ 次传送中传送门的传递关系，请你推断出最后一次传送中传送门的传递关系。 一句话概括：对于集合 $A&#x3D;{1,2,…,n}$ 存在 $n!$ 种双射（一一映射）$ f:A→A$ , 现给出其中 $k+1$ 种映射 $f,f_k,f_{k−1},…,f_2,f_1$ , 求映射$ f_{k+1}$ 使得 $f_{k+1}∘f_k∘…∘f_2∘f_1&#x3D;f$ .（其中 ∘ 为映射的复合，例如 $(f1∘f2)(x)&#x3D;f1[f2(x)]$ 。） 输入第一行 1个整数 t 表示数据组数。($1≤t≤50$) 对于每组数据输入 $k+2$ 行： 第一行 2 个整数 $n,k$ 含义如题所示。（$1≤n≤2×103,1≤k≤100$） 第二行 $n$ 个整数，第 i 个数表示第 i 号人最终站在的传送门的编号。 接下来 k 行，每行 $n$ 个整数，从后往前地给出传送门的传递关系，即第 m 行第 i 个数 $a_i$ 表示在倒数第 m 次传送中，i号门传送到 $a_i$ 号门。 输出输出共 t 行。 对于每组数据，输出一行 n 个整数，第 i 个数 $a_i$ 表示在最后一次传送中 i 号门传送到 $a_i$ 号门。 输入样例12345615 32 1 3 4 51 5 3 2 44 1 3 2 55 1 2 4 3 输出样例13 1 5 2 4 样例解释起初，$1,2,3,4,5$ 号人分别在 $1,2,3,4,5 $号门前。 然后，经过输入样例最后一行 5 1 2 4 3 的传送，$1,2,3,4,5$ 号人分别在 $5,1,2,4,3$ 号门前。 然后，经过 4 1 3 2 5 的传送，处在 $1$ 号门前的 $2$ 号人被传送到 $4$ 号门前，以此类推，$1,2,3,4,5$ 号人分别在 $5,4,1,2,3$ 号门前 然后，经过 1 5 3 2 4 的传送，$1,2,3,4,5$ 号人分别在 $4,2,1,5,3$ 号门前 最后，经过输出样例 3 1 5 2 4 的传送，处在 $4$ 号门的 $1$ 号人被传送到 $2$ 号门前，以此类推，$1,2,3,4,5$ 号人分别在 $2,1,3,4,5$ 号门前，符合输入样例第三行。","categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-10-06T12:16:27.857Z","updated":"2024-10-08T02:16:17.342Z","comments":true,"path":"2024/10/06/hello-world/","permalink":"http://example.com/2024/10/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 优雅的写文章Fluid 是一款很十分优雅的主题，那么写一篇优雅的文章搭配它呢？以下会从几个方面来简述，主要还是做几个推荐。 熟悉 Markdown 语法对于使用 Hexo 的大多数人来说，相信对 Markdown 的语法不会陌生。熟练掌握 Markdown 语法对我们的写作拥有极大的帮助，这里用少用的表格和脚注来举个例子。至于为什么有些公式、流程图无法渲染，是因为 Markdown 追求简洁式写作，默认渲染器不支持复杂渲染。 表格站点 地址 介绍Fluid Docs https://hexo.fluid-dev.com/docs/ Fluid 官方文档Hexo-theme-fluid https://github.com/fluid-dev/hexo-theme-fluid Fluid Github RepoFluid Blog https://hexo.fluid-dev.com/ Fluid 官方博客 站点 地址 介绍 Fluid Docs https://hexo.fluid-dev.com/docs/ Fluid 官方文档 Hexo-theme-fluid https://github.com/fluid-dev/hexo-theme-fluid Fluid Github Repo Fluid Blog https://hexo.fluid-dev.com/ Fluid 官方博客 脚注默认渲染器下正常显示，不同渲染器显示效果不同，写法如下： 12脚注演示[^1][^1]: 脚注内容演示 脚注演示&lt;span class&#x3D;”hint–top hint–rounded” aria-label&#x3D;”脚注内容演示 善用 HTML我们可以在 Markdown 中插入一些简单的 HTML 代码或 CSS 片段来获得更多扩展，使得文章内容更具有多样性。以下演示几个简单功能。”&gt;[1] 跳转位置演示（跳转位置设置点） 文字颜色#519D9E颜色演示 1&lt;span style=&quot;color: #519D9E; &quot;&gt;#519D9E颜色演示&lt;/span&gt; #519D9E颜色演示 文字大小0.7em 文字大小演示 1&lt;span style=&quot;font-size:0.7em;&quot;&gt;0.7em 文字大小演示&lt;/span&gt; 0.7em 文字大小演示 文字位置内容居中演示 1&lt;p style=&quot;text-align:center&quot;&gt;内容居中演示&lt;/p&gt; # 可以修改 text-align 参数来设置文字位置。 内容居中演示 页内跳转 点击到达跳转位置演示 点击到达跳转位置演示 # 在需要跳转的地方添加此代码。跳转位置演示（跳转位置设置点） # 在跳转位置添加次代码。 综合演示12345&lt;p style=&quot;text-align:center;color:#8EC0E4;font-size:1.5em;font-weight: bold;&quot;&gt;综合演示&lt;br&gt;优雅使用 Fluid 写文章&lt;/p&gt; 综合演示 优雅使用 Fluid 写文章 iframe 页面镶套iframe 页面镶套可以帮助我们更好的展示一个页面。比如以下演示页面。 1&lt;iframe src=&quot;https://hexo.fluid-dev.com/&quot; width=&quot;100%&quot; height=&quot;500&quot; name=&quot;topFrame&quot; scrolling=&quot;yes&quot; noresize=&quot;noresize&quot; frameborder=&quot;0&quot; id=&quot;topFrame&quot;&gt;&lt;/iframe&gt; 一些参数说明，width&#x3D;”100%” 为宽度自适应，高度请根据实际需求跳转，注意移动端页面是否匹配。 scrolling 为滚动条参数。frameborder 为边框参数。noresize 属性规定用户无法调整框架的大小。 details 标签用于展示代码较多需要折叠或折叠相关内容，以下为演示，summary 填写显示名称。 Demo Demo 123456type Map struct &#123; mu Mutex read atomic.Value dirty map[interface&#123;&#125;]*entry misses int&#125; 对应的实现代码： 1234567891011&lt;details&gt;&lt;summary&gt;Demo&lt;/summary&gt;```gotype Map struct &#123; mu Mutex read atomic.Value dirty map[interface&#123;&#125;]*entry misses int&#125;\\```&lt;/details&gt; 善用 Tag 组件 Fluid 内置了许多 Tag 组件，包含便签、行内标签（已知不会出现间隔，谨慎使用）、勾选框、按钮和组图，可以使用这些组件来丰富文章内容，具体点击查看官方文档查看，点击跳转到 Fluid Doc。 配图众所周知，博客好不好看，配图占一半。这里给大家推荐几个我常用找配图的地方。另外，请遵循相关网站的版权协议。 Wallpaper Hub Wallhaven Unsplash 更多技巧，上网自行搜索。例如查阅官方 Wiki 或是 博客经验脚注内容演示 善用 HTML我们可以在 Markdown 中插入一些简单的 HTML 代码或 CSS 片段来获得更多扩展，使得文章内容更具有多样性。以下演示几个简单功能。 ↩","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"I 💖 [PUAA]","slug":"I-💖-PUAA","permalink":"http://example.com/tags/I-%F0%9F%92%96-PUAA/"}]}